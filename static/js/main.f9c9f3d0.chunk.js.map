{"version":3,"sources":["history.js","components/Login/CompanyAvatar.js","backend_int/http_client/HttpClient.js","backend_int/paths/RquestPaths.js","backend_int/paths/RquestUrls.js","backend_int/http_client/RequestBuilder.js","backend_int/services/HttpRquestService.js","navigate.js","components/Helper-Functions/EmailValidation.js","components/Menu/LanguageDropdown.js","components/Login/PasswordForgot.js","components/Login/PasswordChange.js","components/Helper-Functions/SessionStorage.js","components/Login/SignIn.js","components/Login/SignUpSuccess.js","components/Login/SignUpForm.js","components/Login/SignUp.js","components/Login/Login.js","theme.js","components/Menu/LogoutConfirmDialog.js","AppContext.js","components/Menu/WelcomePage.js","components/Menu/LeftDrawer.js","components/Main/Main.js","components/Menu/LeftDrawer2.js","components/Main/Main2.js","components/CustomSpinner.js","components/PrivateRoute.js","components/Menu/AccountProfile.js","components/Menu/DeleteConfirmDialog.js","components/Menu/Profile.js","components/Menu/Game.js","components/Menu/HowToPlay.js","App.js","reportWebVitals.js","i18n.js","index.js"],"names":["createBrowserHistory","useStyles","makeStyles","theme","root","display","margin","spacing","square","color","palette","getContrastText","deepOrange","backgroundColor","rounded","green","large","width","height","logo","maxWidth","VariantAvatars","classes","t","useTranslation","style","flexDirection","alignItems","className","alt","src","Typography","component","variant","HTTPClient","addParameters","params","_params","setHeaderCustomParameters","axios","defaults","headers","common","packageJson","version","customer","_build","_contentType","_acceptType","_formData","_promise","_reqType","REQUEST_TYPE","GET","get","_reqPath","timeout","_timeout","responseType","_responseType","withCredentials","POST","post","PUT","put","DELETE","delete","data","console","log","send","then","res","_successCB","_notifierFunc","_userNotification","title","type","catch","err","toString","includes","response","_failCB","request","this","CONTENT_TYPE","JSON","RESPONSE_TYPE","ACCEPT","DEFAULT","path","Object","keys","error","cb","duration","formData","notification","setAuthToken","token","unsetAuthToken","MULTIPART","BLOB","DELETE_ONE_TENANT_USER","userID","UPDATE_ONE_TENANT_USER","userId","UPDATE_ONE_USER_PHOTO","DELETE_ONE_USER_PHOTO","CHECK_PSW","FORGOT_PASSWORD","CREATE_NEW_PASSWORD_TOKEN","VALIDATE_PASSWORD","CHANGE_PASSWORD","LOGIN","REGISTER","AUTH_CALL","LOGOUT","UPLOAD_TEMP_IMAGE","USERS_SERVER_BASE_URL","process","USERS_API_POSIX","IMAGE_API_POSIX","REQUEST_PATHS_FOR","RequestURLs","Path","accountId","String","format","UPDATE_A_TENANT_USER","tenantID","USERS_TENANT_POSIX","s","arguments","i","length","reg","RegExp","replace","HTTP_REQUESTS","loginCredentials","successCallback","errorCallback","client","requestPath","requestType","failCallback","registerCredentials","updateParams","contentType","psw","mail","passwordToken","passwordObj","nav","loc","history","push","emailStrIsValid","email","test","LanguageDropdown","props","marginRight","Select","value","lang","onChange","selector","classesObject","disableUnderline","MenuItem","IconButton","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","paper","avatar","secondary","main","form","marginTop","submit","fontSize","ForgotPassword","React","useState","setEmail","emailError","setEmailError","localStorage","getItem","setLang","i18n","environment","window","location","origin","useEffect","changeLanguage","forgotPasswordClicked","formValid","continueForgotPasswordProcess","mailObject","inviteToken","success","encodeURIComponent","alert","navigate","Grid","container","CssBaseline","item","xs","sm","md","Paper","elevation","justify","FormControl","event","target","noValidate","TextField","required","fullWidth","id","label","name","autoComplete","autoFocus","helperText","onKeyPress","key","preventDefault","Button","onClick","Link","float","ChangePassword","password","setPassword","rePassword","setRePassword","rePasswordError","setRePasswordError","passwordError","setPasswordError","isRender","setIsRender","url","URL","URLSearchParams","search","validateToken","tokenParams","decodeURIComponent","fail","keyPress","changePasswordClicked","continueChangePasswordProcess","passwordObject","SessionStorage","JSONData","setItem","stringify","newToken","parse","userName","existingSessionParams","tenants","tenant","tenantArray","selectedTenant","generatedTokens","tokens","isActive","removeItem","_id","submit2","centered","justifyContent","marginLeft","SignInSide","uname","setUname","setPsw","unameError","setUnameError","pswError","setPswError","signInClicked","continueSignIpProcess","auth_token","welcomeMessageRequest","open","Avatar","FormControlLabel","control","Checkbox","Box","mt","SignUpSuccess","setTimeout","position","top","left","transform","align","SignUpForm","nickNameError","nickNameChanged","emailChanged","passwordChanged","pswError_2","passwordChanged_2","signUpCliked","disabled","opInProgress","alignContent","href","SignUp","setFlag","nickName","setNickName","setNickNameError","psw_2","setPsw_2","setPswError_2","setOpInProgress","opSuccess","setOpSuccess","processSignUp","Container","flagChanged","checked","onSignInClicked","Login","SignIn","onSignUpClicked","content","animationStart","direction","Slide","in","mountOnEnter","unmountOnExit","createTheme","primary","danger","typography","fontFamily","overrides","MuiCssBaseline","MuiCard","padding","MuiCheckbox","colorSecondary","MuiRadio","body","Transition","forwardRef","ref","LogoutConfirmDialog","onClose","handleBack","Dialog","TransitionComponent","keepMounted","DialogTitle","DialogContent","DialogActions","language","clear","AppContext","createContext","unityContext","UnityContext","loaderUrl","dataUrl","frameworkUrl","codeUrl","Game","border","background","flexGrow","appBar","appBarShift","menuButton","hide","drawer","flexShrink","drawerPaper","drawerHeader","mixins","toolbar","contentShift","button","formControl","minWidth","size","modal","boxShadow","shadows","selector2","w100","left45","deleteIcon4","WhiteTextTypography","withStyles","fontWeight","LeftDrawer","context","useContext","useTheme","setOpen","openLogout","setOpenLogout","anchorEl","setAnchorEl","isMain","setIsMain","openUserMenu","Boolean","handleClose","handleLanguageChange","AppBar","clsx","Toolbar","cursor","textOverflow","overflow","whiteSpace","Hidden","mdDown","smDown","currentTarget","Menu","anchorOrigin","vertical","horizontal","transformOrigin","mdUp","ListItemIcon","lgUp","Drawer","anchor","Divider","ListItem","ListItemText","List","innerComponent","Main","shouldBeDisplayWelcomeMessage","enqueueSnackbar","Component","withTranslation","LeftDrawer2","myName","myNickname","nickNamesDictionary","Basic","Math","floor","random","Spinner","require","spinContainer","customSpinner","RegisterEntityCard","fadeIn","PrivateRoute","isLoading","isAuthenticated","Provider","contextData","to","details","uploadButton","input","AccountProfile","rest","fName","Date","time","setTime","interval","setInterval","clearInterval","Card","CardContent","gutterBottom","locationText","dateText","moment","CardActions","accept","multiple","setImage","files","setAvatar","createObjectURL","htmlFor","DeleteConfirmDialog","obj","deletedTime","now","reasonForDelete","deletedBy","flex","profile","bottom","right","cancel","Profile","firstName","setFirstName","firstNameError","setFirstNameError","newPsw","setNewPsw","newPswError","setNewPswError","onSaveChanges","params1","inputProps","reload","paddingTop","paddingBottom","img","resizeMode","BlueTextTypography","paddingLeft","App","callMe","a","setState","sessionData","withMenu","withMenu2","state","that","PasswordForgot","PasswordChange","Main2","switchMain","exact","onCreateWorkspace","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","use","Backend","LanguageDetector","initReactI18next","init","lng","debug","react","useSuspense","interpolation","escapeValue","ReactDOM","render","StrictMode","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.f9c9f3d0.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { deepOrange, green } from '@material-ui/core/colors';\r\nimport { Typography } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  square: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  rounded: {\r\n    color: '#fff',\r\n    backgroundColor: green[500],\r\n  },\r\n  large: {\r\n    width: theme.spacing(14),\r\n    height: theme.spacing(10),\r\n  },\r\n  logo: {\r\n    width:\"auto\",\r\n    maxWidth:\"100%\",\r\n    height:\"235px\"\r\n  }\r\n}));\r\n\r\nexport default function VariantAvatars() {\r\n  const classes = useStyles();\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div style={{\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center'}}>\r\n      <div className=\"logo\">\r\n        <img alt=\"logo\" src=\"/images/HacettepeCs.jpg\" className={classes.logo} />\r\n      </div>\r\n      <Typography component=\"h1\" variant=\"h6\" className=\"title\">\r\n        {t('CompanyAvatar.Space System')}  \r\n      </Typography>\r\n      <br /><br />\r\n    </div>\r\n\r\n\r\n  );\r\n}","import axios from \"axios\";\r\nimport packageJson from '../../../package.json';\r\nexport default class HTTPClient {\r\n    \r\n    static _notifierFunc;\r\n\r\n    constructor() {\r\n        this._params = {};\r\n        this._timeout = 10000;\r\n        this._contentType = HTTPClient.CONTENT_TYPE.JSON;\r\n        this._responseType = HTTPClient.RESPONSE_TYPE.JSON;\r\n        this._acceptType = HTTPClient.ACCEPT.DEFAULT;\r\n        this._formData = null;\r\n        this._userNotification = null;\r\n        this.setHeaderCustomParameters();\r\n    }\r\n\r\n    set requestPath(path) {\r\n        this._reqPath = path;\r\n    }\r\n\r\n    set requestType(type) {\r\n        if (Object.keys(HTTPClient.REQUEST_TYPE).includes(type)) {\r\n            this._reqType = type;\r\n        } else {\r\n            console.error(\"Request type is not defined on HTTPClient\")\r\n        }\r\n    }\r\n\r\n    set successCallback(cb) {\r\n        this._successCB = cb;\r\n    }\r\n\r\n    set failCallback(cb) {\r\n        this._failCB = cb;\r\n    }\r\n\r\n    set timeout(duration) {\r\n        this._timeout = duration;\r\n    }\r\n\r\n    set contentType(type) {\r\n        this._contentType = type;\r\n    }\r\n\r\n    set responseType(type) {\r\n        this._responseType = type;\r\n    }\r\n\r\n    set acceptType(type) {\r\n        this._acceptType = type;\r\n    }\r\n\r\n    set formData(formData) {\r\n        this._formData = formData;\r\n    }\r\n\r\n    set userNotification(notification) {\r\n        this._userNotification = notification;\r\n    }\r\n\r\n    addParameters = (params) => {\r\n        this._params = { ...this._params, ...params };\r\n    };\r\n\r\n    static setAuthToken = (token) => {\r\n        //axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n    };\r\n\r\n    setHeaderCustomParameters = ()  => {\r\n        axios.defaults.headers.common = { \"version\":packageJson.version,\"customer\":packageJson.customer}\r\n\r\n    }\r\n\r\n    static unsetAuthToken = () => {\r\n        //axios.defaults.headers.common['Authorization'] = null;\r\n    };\r\n\r\n    _build = () => {\r\n        const headers = { 'Content-Type': this._contentType, 'Accept': this._acceptType};\r\n        const params = this._formData ? this._formData : this._params;\r\n        this._promise = null;\r\n        switch (this._reqType) {\r\n            case HTTPClient.REQUEST_TYPE.GET:\r\n                this._promise = axios.get(this._reqPath, { params:params, headers: headers, timeout: this._timeout, responseType: this._responseType, withCredentials:true });\r\n                break;\r\n            case HTTPClient.REQUEST_TYPE.POST:\r\n                this._promise = axios.post(this._reqPath, params, { headers: headers, timeout: this._timeout, responseType: this._responseType, withCredentials:true  });\r\n                break;\r\n            case HTTPClient.REQUEST_TYPE.PUT:\r\n                this._promise = axios.put(this._reqPath, params, { headers: headers, timeout: this._timeout, responseType: this._responseType, withCredentials:true  });\r\n                break;\r\n            case HTTPClient.REQUEST_TYPE.DELETE:\r\n                this._promise = axios.delete(this._reqPath, {data:params, headers: headers, timeout: this._timeout, responseType: this._responseType, withCredentials:true  });\r\n                break;\r\n            default:\r\n                console.log(`This request type (${this._reqType}) not handled by HTTPClient`);\r\n                break;\r\n        }\r\n    };\r\n\r\n    send = () => {\r\n        this._build();\r\n        this._promise.then((res) => {\r\n            this._successCB(res.data);\r\n            if (HTTPClient._notifierFunc && this._userNotification) {\r\n                HTTPClient._notifierFunc(this._userNotification.title, {\r\n                    variant: this._userNotification.type\r\n                });\r\n            }\r\n        }).catch((err) => {\r\n            if(err.toString().includes('401')){\r\n                //TODO logout user\r\n            }\r\n            if (err.response) {\r\n                // Request made and server responded\r\n                this._failCB(err.response);\r\n              } else if (err.request) {\r\n                // The request was made but no response was received\r\n                this._failCB(err);\r\n              } else {\r\n                // Something happened in setting up the request that triggered an Error\r\n                this._failCB(err);\r\n              }\r\n              if (HTTPClient._notifierFunc && this._userNotification) {\r\n                HTTPClient._notifierFunc(this._userNotification.title, {\r\n                    variant: this._userNotification.type\r\n                });\r\n            }\r\n            //HTTPClient.showErrorFunction(err.toString());\r\n        })\r\n    };\r\n\r\n}\r\n\r\nHTTPClient.REQUEST_TYPE = {\r\n    GET: \"GET\",\r\n    POST: \"POST\",\r\n    PUT: \"PUT\",\r\n    DELETE: \"DELETE\"\r\n};\r\n\r\nHTTPClient.CONTENT_TYPE = {\r\n    JSON: \"application/json\",\r\n    MULTIPART: \"multipart/form-data\"\r\n};\r\n\r\nHTTPClient.RESPONSE_TYPE = {\r\n    JSON: \"json\",\r\n    BLOB: \"blob\"\r\n};\r\n\r\nHTTPClient.ACCEPT = {\r\n    DEFAULT: \"application/json, text/plain, */*\",\r\n    JSON: \"application/json,*/*\",\r\n};","export default {\r\n\r\n    DELETE_ONE_TENANT_USER: (userID)=>`user/${userID}`,\r\n    UPDATE_ONE_TENANT_USER : (userId)=>`user/${userId}`,\r\n    UPDATE_ONE_USER_PHOTO : (userID)=>`profilePicture/${userID}`,\r\n    DELETE_ONE_USER_PHOTO : (userID)=>`profilePicture/${userID}`,\r\n    CHECK_PSW: (userId)=>`${userId}/checkPsw`,\r\n    FORGOT_PASSWORD:\"forgotPassword\",\r\n    CREATE_NEW_PASSWORD_TOKEN:\"generatePasswordToken\",\r\n    VALIDATE_PASSWORD : \"passwordValidate\",\r\n    CHANGE_PASSWORD : \"changePassword\",\r\n    LOGIN:\"login\",\r\n    REGISTER: \"register\",\r\n    AUTH_CALL:\"me\",\r\n    LOGOUT:\"logout\",\r\n    UPLOAD_TEMP_IMAGE:\"tempRoomImage\"\r\n  }\r\n  \r\n  ","\r\nconst USERS_SERVER_BASE_URL   = process.env.REACT_APP_USERS_API_BASE_URL;\r\n\r\nexport default {\r\n    USERS_SERVER_BASE_URL   :USERS_SERVER_BASE_URL,\r\n    USERS_API_POSIX         :\"/\",\r\n    IMAGE_API_POSIX         :\"/api/v1/images/\"\r\n}","import Path from \"../paths/RquestPaths\"\r\nimport RequestURLs from \"../paths/RquestUrls\"\r\n\r\n\r\nexport const REQUEST_PATHS_FOR = {\r\n    USERS_SERVICE: {\r\n        LOGIN: () => {\r\n            return `${RequestURLs.USERS_SERVER_BASE_URL}${RequestURLs.USERS_API_POSIX}${Path.LOGIN}`;\r\n        },\r\n        REGISTER: () => {\r\n            return `${RequestURLs.USERS_SERVER_BASE_URL}${RequestURLs.USERS_API_POSIX}${Path.REGISTER}`;\r\n        },\r\n        AUTH_CALL: () => {\r\n            return `${RequestURLs.USERS_SERVER_BASE_URL}${RequestURLs.USERS_API_POSIX}${Path.AUTH_CALL}`;\r\n        },\r\n        UPDATE_ONE_TENANT_USER: (accountId) =>{\r\n            return `${RequestURLs.USERS_SERVER_BASE_URL}${RequestURLs.USERS_API_POSIX}${Path.UPDATE_ONE_TENANT_USER(accountId)}`;\r\n        },\r\n        DELETE_ONE_TENANT_USER: (userId) =>{\r\n            return `${RequestURLs.USERS_SERVER_BASE_URL}${RequestURLs.USERS_API_POSIX}${Path.DELETE_ONE_TENANT_USER(userId)}`;\r\n        },\r\n        UPDATE_ONE_USER_PHOTO: (userId) => {\r\n            return String.format(`${RequestURLs.USERS_SERVER_BASE_URL}${RequestURLs.IMAGE_API_POSIX}${Path.UPDATE_ONE_USER_PHOTO(userId)}`);\r\n        },\r\n        DELETE_ONE_USER_PHOTO: (userId) => {\r\n            return String.format(`${RequestURLs.USERS_SERVER_BASE_URL}${RequestURLs.IMAGE_API_POSIX}${Path.DELETE_ONE_USER_PHOTO(userId)}`);\r\n        },\r\n        UPDATE_A_TENANT_USER: (tenantID) => {\r\n            return String.format(`${RequestURLs.USERS_SERVER_BASE_URL}${RequestURLs.USERS_TENANT_POSIX}${Path.UPDATE_A_TENANT_USER(tenantID)}`);\r\n        },\r\n        CHECK_PSW: (userId) => {\r\n            return String.format(`${RequestURLs.USERS_SERVER_BASE_URL}${RequestURLs.USERS_API_POSIX}${Path.CHECK_PSW(userId)}`);\r\n        },\r\n        LOGOUT: () => {\r\n            return `${RequestURLs.USERS_SERVER_BASE_URL}${RequestURLs.USERS_API_POSIX}${Path.LOGOUT}`;\r\n        },\r\n        FORGOT_PASSWORD : () =>{\r\n            return `${RequestURLs.USERS_SERVER_BASE_URL}${RequestURLs.USERS_API_POSIX}${Path.FORGOT_PASSWORD}`;\r\n        },\r\n        CREATE_NEW_PASSWORD_TOKEN : () =>{\r\n            return `${RequestURLs.USERS_SERVER_BASE_URL}${RequestURLs.USERS_API_POSIX}${Path.CREATE_NEW_PASSWORD_TOKEN}`;\r\n        },\r\n        VALIDATE_PASSWORD : () => {\r\n            return `${RequestURLs.USERS_SERVER_BASE_URL}${RequestURLs.USERS_API_POSIX}${Path.VALIDATE_PASSWORD}`;\r\n        },\r\n        CHANGE_PASSWORD : () => {\r\n            return `${RequestURLs.USERS_SERVER_BASE_URL}${RequestURLs.USERS_API_POSIX}${Path.CHANGE_PASSWORD}`;\r\n        }\r\n    },\r\n    IMAGE_SERVICE: {\r\n        UPLOAD_TEMP_IMAGE:() => {\r\n            return `${RequestURLs.BOOKING_SERVER_BASE_URL}${RequestURLs.IMAGE_API_POSIX}${Path.UPLOAD_TEMP_IMAGE}`;\r\n        }\r\n    }\r\n};\r\n\r\nString.format = function () {\r\n    var s = arguments[0];\r\n    for (var i = 0; i < arguments.length - 1; i++) {\r\n        var reg = new RegExp(\"\\\\{\" + i + \"\\\\}\", \"gm\");\r\n        s = s.replace(reg, arguments[i + 1]);\r\n    }\r\n    return s;\r\n};","import HTTPClient from \"../http_client/HttpClient\";\r\nimport { REQUEST_PATHS_FOR } from \"../http_client/RequestBuilder\";\r\n\r\nexport const HTTP_REQUESTS =\r\n{\r\n        USER_SERVICE:\r\n            {\r\n                LOGIN: (loginCredentials,successCallback,errorCallback)=>{\r\n                    let client              = new HTTPClient();\r\n                    client.requestPath      = REQUEST_PATHS_FOR.USERS_SERVICE.LOGIN();\r\n                    client.requestType      = HTTPClient.REQUEST_TYPE.POST;\r\n                    client.successCallback  = successCallback;\r\n                    client.failCallback     = errorCallback;\r\n                    client.timeout          = 5000; // 5 seconds\r\n                    client.addParameters(loginCredentials);\r\n                    client.send();\r\n                },\r\n                REGISTER: (registerCredentials,successCallback,errorCallback)=>{\r\n                    let client              = new HTTPClient();\r\n                    client.requestPath      = REQUEST_PATHS_FOR.USERS_SERVICE.REGISTER();\r\n                    client.requestType      = HTTPClient.REQUEST_TYPE.POST;\r\n                    client.successCallback  = successCallback;\r\n                    client.failCallback     = errorCallback;\r\n                    client.timeout          = 5000; // 5 seconds\r\n                    client.addParameters(registerCredentials);\r\n                    client.send();\r\n                },\r\n                UPDATE_ONE_TENANT_USER : (accountId,updateParams,successCallback,errorCallback) =>{\r\n                    let client              = new HTTPClient();\r\n                    client.requestPath      = REQUEST_PATHS_FOR.USERS_SERVICE.UPDATE_ONE_TENANT_USER(accountId);\r\n                    client.requestType      = HTTPClient.REQUEST_TYPE.PUT;\r\n                    client.successCallback  = successCallback;\r\n                    client.failCallback     = errorCallback;\r\n                    client.timeout          = 5000; // 5 seconds   \r\n                    client.addParameters(updateParams);               \r\n                    client.send();\r\n                },\r\n                DELETE_ONE_TENANT_USER : (userId,updateParams,successCallback,errorCallback) =>{\r\n                    let client              = new HTTPClient();\r\n                    client.requestPath      = REQUEST_PATHS_FOR.USERS_SERVICE.DELETE_ONE_TENANT_USER(userId);\r\n                    client.requestType      = HTTPClient.REQUEST_TYPE.DELETE;\r\n                    client.successCallback  = successCallback;\r\n                    client.failCallback     = errorCallback;\r\n                    client.timeout          = 5000; // 5 seconds   \r\n                    client.addParameters(updateParams);               \r\n                    client.send();\r\n                },\r\n                UPDATE_ONE_USER_PHOTO :  (userId,updateParams,successCallback,errorCallback) => {\r\n                    let client              = new HTTPClient();\r\n                    client.requestPath      = REQUEST_PATHS_FOR.USERS_SERVICE.UPDATE_ONE_USER_PHOTO(userId);\r\n                    client.requestType      = HTTPClient.REQUEST_TYPE.POST;\r\n                    client.contentType      = HTTPClient.CONTENT_TYPE.MULTIPART;\r\n                    client.successCallback  = successCallback;\r\n                    client.failCallback     = errorCallback;\r\n                    client.timeout          = 5000; //5 seconds\r\n                    client.formData         = updateParams;     \r\n                    client.send();\r\n                },\r\n                DELETE_ONE_USER_PHOTO : (userId,updateParams,successCallback,errorCallback) =>{\r\n                    let client              = new HTTPClient();\r\n                    client.requestPath      = REQUEST_PATHS_FOR.USERS_SERVICE.DELETE_ONE_USER_PHOTO(userId);\r\n                    client.requestType      = HTTPClient.REQUEST_TYPE.DELETE;\r\n                    client.successCallback  = successCallback;\r\n                    client.failCallback     = errorCallback;\r\n                    client.timeout          = 5000; // 5 seconds   \r\n                    client.addParameters(updateParams);               \r\n                    client.send();\r\n                },\r\n                CHECK_PSW :  (userId,psw,successCallback,errorCallback) => {\r\n                    let client              = new HTTPClient();\r\n                    client.requestPath      = REQUEST_PATHS_FOR.USERS_SERVICE.CHECK_PSW(userId);\r\n                    client.requestType      = HTTPClient.REQUEST_TYPE.POST;\r\n                    client.successCallback  = successCallback;\r\n                    client.failCallback     = errorCallback;\r\n                    client.timeout          = 5000; //5 seconds\r\n                    client.addParameters(psw);\r\n                    client.send();\r\n                },\r\n                AUTH_CALL: (successCallback,errorCallback)=>{\r\n                    let client              = new HTTPClient();\r\n                    client.requestPath      = REQUEST_PATHS_FOR.USERS_SERVICE.AUTH_CALL();\r\n                    client.requestType      = HTTPClient.REQUEST_TYPE.POST;\r\n                    client.successCallback  = successCallback;\r\n                    client.failCallback     = errorCallback;\r\n                    client.timeout          = 5000; // 5 seconds\r\n                    //client.addParameters(loginCredentials);\r\n                    client.send();\r\n                },\r\n                LOGOUT: (successCallback,errorCallback)=>{\r\n                    let client              = new HTTPClient();\r\n                    client.requestPath      = REQUEST_PATHS_FOR.USERS_SERVICE.LOGOUT();\r\n                    client.requestType      = HTTPClient.REQUEST_TYPE.POST;\r\n                    client.successCallback  = successCallback;\r\n                    client.failCallback     = errorCallback;\r\n                    client.timeout          = 5000; // 5 seconds\r\n                    client.send();\r\n                },\r\n                FORGOT_PASSWORD : (mail,successCallback,errorCallback)=>{\r\n                    let client              = new HTTPClient();\r\n                    client.requestPath      = REQUEST_PATHS_FOR.USERS_SERVICE.FORGOT_PASSWORD();\r\n                    client.requestType      = HTTPClient.REQUEST_TYPE.POST;\r\n                    client.successCallback  = successCallback;\r\n                    client.failCallback     = errorCallback;\r\n                    client.timeout          = 5000; // 5 seconds\r\n                    client.addParameters(mail);\r\n                    client.send();\r\n                },\r\n                CREATE_NEW_PASSWORD_TOKEN :  (passwordToken,successCallback,errorCallback) => {\r\n                    let client              = new HTTPClient();\r\n                    client.requestPath      = REQUEST_PATHS_FOR.USERS_SERVICE.CREATE_NEW_PASSWORD_TOKEN();\r\n                    client.requestType      = HTTPClient.REQUEST_TYPE.POST;\r\n                    client.successCallback  = successCallback;\r\n                    client.failCallback     = errorCallback;\r\n                    client.timeout          = 5000; //5 seconds\r\n                    client.addParameters(passwordToken);\r\n                    client.send();\r\n                },\r\n                VALIDATE_PASSWORD : (token,successCallback,errorCallback) =>{\r\n                    let client              = new HTTPClient();\r\n                    client.requestPath      = REQUEST_PATHS_FOR.USERS_SERVICE.VALIDATE_PASSWORD();\r\n                    client.requestType      = HTTPClient.REQUEST_TYPE.POST;\r\n                    client.successCallback  = successCallback;\r\n                    client.failCallback     = errorCallback;\r\n                    client.timeout          = 5000; //5 seconds\r\n                    client.addParameters(token);\r\n                    client.send();\r\n                },\r\n                CHANGE_PASSWORD : (passwordObj,successCallback,errorCallback)=>{\r\n                    let client              = new HTTPClient();\r\n                    client.requestPath      = REQUEST_PATHS_FOR.USERS_SERVICE.CHANGE_PASSWORD();\r\n                    client.requestType      = HTTPClient.REQUEST_TYPE.PUT;\r\n                    client.successCallback  = successCallback;\r\n                    client.failCallback     = errorCallback;\r\n                    client.timeout          = 5000; // 5 seconds\r\n                    client.addParameters(passwordObj);\r\n                    client.send();\r\n                },\r\n            },\r\n            IMAGE_SERVICE: {\r\n                UPLOAD_TEMP_IMAGE :  (updateParams,successCallback,errorCallback) => {\r\n                    let client              = new HTTPClient();\r\n                    client.requestPath      = REQUEST_PATHS_FOR.IMAGE_SERVICE.UPLOAD_TEMP_IMAGE();\r\n                    client.requestType      = HTTPClient.REQUEST_TYPE.POST;\r\n                    client.contentType      = HTTPClient.CONTENT_TYPE.MULTIPART;\r\n                    client.successCallback  = successCallback;\r\n                    client.failCallback     = errorCallback;\r\n                    client.timeout          = 5000; //5 seconds\r\n                    client.formData         = updateParams;     \r\n                    client.send();\r\n                },\r\n            }        \r\n    };\r\n","import history from \"./history\";\r\n\r\nexport default function nav(loc) {\r\n  history.push(loc);\r\n}","export default function emailStrIsValid(email) {\r\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n  }","import { IconButton, MenuItem, Select } from '@material-ui/core';\r\nimport { IconFlagTR, IconFlagUS } from 'material-ui-flags';\r\nimport React from 'react';\r\n\r\nconst LanguageDropdown = (props) => {\r\nreturn ( <div style={{marginRight:\"16px\"}}>\r\n            <Select\r\n                value={props.lang}\r\n                onChange={props.onChange}\r\n                className={props.classes.selector}\r\n                classes={props.classesObject}\r\n                disableUnderline={true}\r\n            >\r\n                <MenuItem value=\"en\" >\r\n                <IconButton ><IconFlagUS /></IconButton>\r\n                </MenuItem> \r\n                <MenuItem value=\"tr\" >\r\n                <IconButton ><IconFlagTR /></IconButton>\r\n                </MenuItem> \r\n            </Select>\r\n            </div> \r\n        );\r\n }\r\nexport default LanguageDropdown;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport VariantAvatars from './CompanyAvatar';\r\nimport { HTTP_REQUESTS } from '../../backend_int/services/HttpRquestService';\r\nimport navigate from '../../navigate';\r\nimport emailStrIsValid from \"../Helper-Functions/EmailValidation\";   \r\nimport { useTranslation } from 'react-i18next';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\n\r\nimport LanguageDropdown from '../Menu/LanguageDropdown';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(images/qwe.jpg)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', \r\n        marginTop: theme.spacing(0),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    selector:{\r\n        color:'white',\r\n        fontSize:'medium',\r\n        \"& .MuiSvgIcon-root\": { color: \"black\" }\r\n    },\r\n}));\r\n\r\nfunction ForgotPassword(props) {\r\n    const classes = useStyles();\r\n    const [email, setEmail] = React.useState(null);\r\n    const [emailError, setEmailError] = React.useState(null);\r\n    const [lang, setLang] = React.useState( (localStorage.getItem('i18nextLng')) ? localStorage.getItem('i18nextLng') : 'en');\r\n    const { t, i18n } = useTranslation();\r\n    let environment = window.location.origin;\r\n\r\n    React.useEffect(() => {\r\n        i18n.changeLanguage(lang); \r\n      }, [i18n, lang]);\r\n\r\n    const handleLanguageChange = (event) => {\r\n        setLang(event.target.value);\r\n    };\r\n\r\n    const emailChanged = event => {\r\n\r\n        setEmail(event.target.value);\r\n        setEmailError(null);\r\n    }\r\n\r\n    const keyPress = event => {\r\n\r\n        if(event.key===\"Enter\")\r\n        {\r\n            event.preventDefault();\r\n            forgotPasswordClicked();\r\n        }\r\n    }\r\n\r\n    const forgotPasswordClicked = () => {\r\n        let formValid = true;\r\n\r\n        if (!email || email === \"\") {\r\n            setEmailError('errorProperties.FORGOT_PASSWORD.SET_EMAIL_ERROR');\r\n            formValid = false;\r\n        }\r\n        if (email){\r\n            if(!emailStrIsValid(email)){\r\n                setEmailError('errorProperties.FORGOT_PASSWORD.NOT_VALID_EMAIL')\r\n            }else{\r\n                if (formValid) continueForgotPasswordProcess();\r\n            }   \r\n        }\r\n    }   \r\n\r\n    const loginClicked = () =>{\r\n        navigate(\"/login\")\r\n    }\r\n\r\n    const continueForgotPasswordProcess = () => {\r\n        \r\n        let mailObject = {\r\n            email : email\r\n        }\r\n        let inviteToken = \"\";\r\n\r\n        // url -> localhost:3001/generatePasswordToken        \r\n        HTTP_REQUESTS.USER_SERVICE.CREATE_NEW_PASSWORD_TOKEN(mailObject, (success) => {\r\n            inviteToken = success.token;\r\n            mailObject = {\r\n                email : email,\r\n                token : (environment +\"/password-change?code=\" + encodeURIComponent(inviteToken))\r\n            }\r\n            // url -> localhost:3001/forgotPassword\r\n            HTTP_REQUESTS.USER_SERVICE.FORGOT_PASSWORD(mailObject,(success)=>{\r\n                alert(\"Mail sent succesfully to your email address\")\r\n                navigate(\"/login\")\r\n            },(err) => {\r\n                alert(\"an error occured (2)\" , err)\r\n            })\r\n        },(err)=>{\r\n            alert(\"an error occured (1) \" , err)\r\n        });\r\n   \r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container component=\"main\" className=\"signInRoot\">\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <Grid item container xs={12} justify=\"flex-end\" alignItems=\"center\">\r\n                    <FormControl>\r\n                        <LanguageDropdown lang={lang} onChange={handleLanguageChange} classes={classes} />\r\n                    </FormControl>\r\n                </Grid>\r\n                <div className=\"signInPaper\">\r\n                    <VariantAvatars />\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        {t('ForgotPassword.Forgot')}\r\n                    </Typography>\r\n                    <form className=\"form\" noValidate>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label={t('ForgotPassword.Email')}\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            onChange={emailChanged}\r\n                            value={email}\r\n                            helperText={t(emailError) || \" \"}\r\n                            error={t(emailError)}\r\n                            onKeyPress={keyPress}\r\n                        />\r\n                        <Button\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={forgotPasswordClicked}                           \r\n                        >\r\n                            {t('ForgotPassword.Change Pass')}\r\n                        </Button>\r\n                       <Grid container>\r\n                            <Grid item xs={12} s>\r\n                                <Link style={{ float: \"right\" }} className=\"cursor-ptr\" onClick={loginClicked} variant=\"body2\">\r\n                                    {t('ForgotPassword.Login')}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default ForgotPassword;","import React, { useEffect } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport VariantAvatars from './CompanyAvatar';\r\nimport { HTTP_REQUESTS } from '../../backend_int/services/HttpRquestService';\r\nimport navigate from '../../navigate';\r\n\r\n\r\n\r\nimport { useTranslation } from 'react-i18next';\r\nimport { FormControl } from '@material-ui/core';\r\nimport LanguageDropdown from '../Menu/LanguageDropdown';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(images/qwe.jpg)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', \r\n        marginTop: theme.spacing(0),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nfunction ChangePassword(props) {\r\n    const classes = useStyles();\r\n    const [password, setPassword] = React.useState(null);\r\n    const [rePassword, setRePassword] = React.useState(null);\r\n    const [rePasswordError, setRePasswordError] = React.useState(null);\r\n    const [passwordError, setPasswordError] = React.useState(null);\r\n    const [email, setEmail] = React.useState(null);\r\n    const [isRender , setIsRender] = React.useState(false);\r\n    const [lang, setLang] = React.useState( (localStorage.getItem('i18nextLng')) ? localStorage.getItem('i18nextLng') : 'en');\r\n    const { t, i18n } = useTranslation();\r\n\r\n    let url = new URL(window.location);\r\n    let params = new URLSearchParams(url.search);\r\n\r\n    useEffect(() => {\r\n        if (params.get(\"code\") == null) {\r\n            /* props.enqueueSnackbar(t('errorProperties.INVITATION.VALIDATE_TOKEN.INVALID_LINK'), {\r\n                variant: 'error'\r\n            }); */\r\n            alert(\"Invalid link ! (1)\");\r\n            navigate(\"/login\")\r\n        } else {\r\n            validateToken();\r\n        }\r\n    },params.get(\"code\"))\r\n\r\n    React.useEffect(() => {\r\n        i18n.changeLanguage(lang);\r\n      }, [i18n, lang]);\r\n    \r\n    const validateToken = () => {\r\n\r\n        let token = decodeURIComponent(params.get(\"code\"));\r\n        let tokenParams = { passwordToken: token };\r\n\r\n        // url -> localhost:3001/passwordValidate\r\n        HTTP_REQUESTS.USER_SERVICE.VALIDATE_PASSWORD(\r\n          tokenParams,\r\n          (success) => {\r\n            setEmail(success.email);\r\n            setIsRender(true)\r\n          },\r\n          (fail) => {\r\n            /* props.enqueueSnackbar(t('errorProperties.INVITATION.VALIDATE_TOKEN.INVALID_LINK'), {\r\n                variant: 'error'\r\n            }); */\r\n            alert(\"Invalid link ! (2)\");\r\n            navigate(\"/login\");\r\n          }\r\n        );\r\n      };\r\n\r\n    const loginClicked = () =>{\r\n        navigate(\"/login\")\r\n    } \r\n\r\n    const passwordChange = event => {\r\n        setPassword(event.target.value);\r\n        setPasswordError(null);\r\n    }\r\n\r\n    const rePasswordChange = event => {\r\n        setRePassword(event.target.value);\r\n        setRePasswordError(null);\r\n    }\r\n\r\n    const keyPress = event => {\r\n        if(event.key===\"Enter\")\r\n        {\r\n            event.preventDefault();\r\n            changePasswordClicked();\r\n        }\r\n    }\r\n\r\n    const changePasswordClicked = () => {\r\n        if (!password || password === \"\" ){\r\n            setPasswordError('errorProperties.CHANGE_PASSWORD.SET_PASSWORD_ERROR');\r\n        } else if(password.length < 6){\r\n            setPasswordError('errorProperties.CHANGE_PASSWORD.SET_PSW_ERROR_LENGTH');\r\n        }else if(!rePassword || rePassword === \"\" ){\r\n            setRePasswordError('errorProperties.CHANGE_PASSWORD.SET_PASSWORD_ERROR');\r\n        }else if(password !== rePassword){\r\n            setRePasswordError('errorProperties.CHANGE_PASSWORD.SET_PASSWORD_MATCH_ERROR');\r\n            /* props.enqueueSnackbar(t('errorProperties.CHANGE_PASSWORD.CHANGE_PASSWORD_CLICKED.SET_PASSWORD_NOT_MATCH_ERROR'), {\r\n                variant: 'error'\r\n            }); */\r\n        }\r\n        else{\r\n            continueChangePasswordProcess();\r\n        }\r\n    }\r\n\r\n    \r\n    const continueChangePasswordProcess = () => {\r\n\r\n        let passwordObject = {\r\n            password : password,\r\n            email : email\r\n        }\r\n\r\n        // url -> localhost:3001/changePassword\r\n        HTTP_REQUESTS.USER_SERVICE.CHANGE_PASSWORD(passwordObject,(success)=>{\r\n            /* props.enqueueSnackbar(t('Password.ChangePassword.Password Changed'), {\r\n                variant: 'success'\r\n            }); */\r\n            alert(\"Your password changed successfully\");\r\n            navigate(\"/login\")\r\n        },(err) => {\r\n            /* props.enqueueSnackbar(t('errorProperties.CHANGE_PASSWORD.CONTINUE_CHANGE_PASSWORD_PROCCES'), {\r\n                variant: 'error'\r\n            }); */\r\n            alert(\"Password change failed\");\r\n         });\r\n    }\r\n\r\n    const handleLanguageChange = (event) => {\r\n        setLang(event.target.value);\r\n    };\r\n\r\n\r\n    return ( isRender ? (\r\n        <Grid container component=\"main\" className=\"signInRoot\">\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n            <Grid item container xs={12} justify=\"flex-end\" alignItems=\"center\">\r\n                <FormControl>\r\n                    <LanguageDropdown lang={lang} onChange={handleLanguageChange} classes={classes} />\r\n                </FormControl>\r\n            </Grid>\r\n                <div className=\"signInPaper\">\r\n                    <VariantAvatars />\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        {t('ChangePassword.Change Pass')}\r\n                    </Typography>\r\n                    <form className=\"form\" noValidate>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            type=\"password\"\r\n                            fullWidth\r\n                            id=\"password\"\r\n                            label={t('ChangePassword.New Pass')}\r\n                            name=\"password\"\r\n                            autoComplete=\"password\"\r\n                            autoFocus\r\n                            onChange={passwordChange}\r\n                            value={password}\r\n                            helperText={t(passwordError)|| \" \"}\r\n                            error={t(passwordError)}\r\n                            onKeyPress={keyPress}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            type=\"password\"\r\n                            fullWidth\r\n                            id=\"password\"\r\n                            label={t('ChangePassword.Confirm New')}\r\n                            name=\"password\"\r\n                            autoComplete=\"password\"\r\n                            autoFocus\r\n                            onChange={rePasswordChange}\r\n                            value={rePassword}\r\n                            helperText={t(rePasswordError)|| \" \"}\r\n                            error={t(rePasswordError)}\r\n                            onKeyPress={keyPress}\r\n                        />\r\n                        <Button\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={changePasswordClicked}                           \r\n                        >\r\n                            {t('ChangePassword.Change Pass')}\r\n                        </Button>\r\n                       <Grid container>\r\n                            <Grid item xs={12} s>\r\n                                <Link style={{ float: \"right\" }} className=\"cursor-ptr\" onClick={loginClicked} variant=\"body2\">\r\n                                    {t('ChangePassword.Login')}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n            </Grid>\r\n        </Grid> \r\n        ) : null\r\n    );\r\n}\r\n\r\nexport default ChangePassword;","class SessionStorage{\r\n\r\n    //SETTERS\r\n    static set sessionData(JSONData){\r\n        localStorage.setItem(\"session_params\", JSON.stringify(JSONData));\r\n    }\r\n\r\n    static set authToken(newToken){\r\n\r\n    }\r\n\r\n    static set authUserName(userName){\r\n        try{\r\n            let existingSessionParams =  JSON.parse(localStorage.getItem(\"session_params\"));\r\n            existingSessionParams.name = userName;\r\n            localStorage.setItem(\"session_params\", JSON.stringify(existingSessionParams));\r\n        }catch(err){\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static set tenants(tenant){\r\n        try{\r\n            let existingSessionParams =  JSON.parse(localStorage.getItem(\"session_params\"));\r\n            const tenantArray = [...existingSessionParams.tenants, tenant];\r\n            existingSessionParams.tenant=tenantArray;\r\n            localStorage.setItem(\"session_params\", JSON.stringify(existingSessionParams));\r\n        }catch(err){\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static set selectedTenantID(tenantID){\r\n        try{\r\n            let existingSessionParams =  JSON.parse(localStorage.getItem(\"session_params\"));            \r\n            existingSessionParams.selectedTenant=tenantID;\r\n            localStorage.setItem(\"session_params\", JSON.stringify(existingSessionParams));\r\n        }catch(err){\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static set generatedTokens(tokens){\r\n        try{\r\n            let existingSessionParams =  JSON.parse(localStorage.getItem(\"session_params\"));\r\n            existingSessionParams.generatedTokens = tokens;\r\n            localStorage.setItem(\"session_params\", JSON.stringify(existingSessionParams));\r\n        }catch(err){\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static set welcomeMessageRequest(isActive){\r\n        if(isActive){\r\n            localStorage.setItem(\"show_success_login_message\", \"yes\");\r\n        }else{\r\n            localStorage.removeItem('show_success_login_message');\r\n        }\r\n    }\r\n\r\n    //GETTERS\r\n    static get authToken(){\r\n\r\n        return null;\r\n    }\r\n\r\n    static get authUserID(){\r\n        try{\r\n            return JSON.parse(localStorage.getItem(\"session_params\"))._id;\r\n        }catch(err){\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static get tenants(){\r\n        try{\r\n            return JSON.parse(localStorage.getItem(\"session_params\")).tenants;\r\n        }catch(err){\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static get selectedTenantID(){\r\n        try{\r\n            return JSON.parse(localStorage.getItem(\"session_params\")).selectedTenant;\r\n        }catch(err){\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static get userEmail(){\r\n        try{\r\n            return JSON.parse(localStorage.getItem(\"session_params\")).email;\r\n        }catch(err){\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static get generatedTokens(){\r\n        try{\r\n            return JSON.parse(localStorage.getItem(\"session_params\")).generatedTokens;\r\n        }catch(err){\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static get shouldBeDisplayWelcomeMessage(){\r\n        return localStorage.getItem('show_success_login_message');\r\n    }\r\n\r\n    static get authUserName(){\r\n        try {\r\n            return JSON.parse(localStorage.getItem(\"session_params\")).name;\r\n        } catch (error) {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    //FUNCTIONS\r\n    static removeSessionData(){\r\n        localStorage.removeItem('session_params');\r\n    }\r\n    \r\n}\r\n\r\nexport default SessionStorage;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport VariantAvatars from './CompanyAvatar';\r\nimport { HTTP_REQUESTS } from '../../backend_int/services/HttpRquestService';\r\nimport SessionStorage from '../Helper-Functions/SessionStorage';\r\nimport navigate from '../../navigate';\r\nimport { useTranslation } from 'react-i18next';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport LanguageDropdown from '../Menu/LanguageDropdown';\r\nimport emailStrIsValid from \"../Helper-Functions/EmailValidation\";   \r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: '100vh',\r\n    },\r\n    image: {\r\n        backgroundImage: 'url(images/qwe.jpg)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundColor:\r\n            theme.palette.type === 'dark' ? theme.palette.grey[900] : theme.palette.grey[50],\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n    },\r\n    paper: {\r\n        margin: theme.spacing(8, 4),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', \r\n        marginTop: theme.spacing(0),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    submit2: {\r\n        margin: theme.spacing(0, 0, 2)\r\n    },\r\n    centered: {\r\n        justifyContent: 'left',\r\n        marginLeft: '0',\r\n        marginRight:'0',\r\n        display:'flex'\r\n    },\r\n    selector:{\r\n        color:'white',\r\n        fontSize:'medium',\r\n        \"& .MuiSvgIcon-root\": { color: \"black\" }\r\n    },\r\n}));\r\n\r\nfunction SignInSide(props) {\r\n    const classes = useStyles();\r\n    const [uname, setUname] = React.useState(props.email);\r\n    const [psw, setPsw] = React.useState(null);\r\n    const [unameError, setUnameError] = React.useState(null);\r\n    const [pswError, setPswError] = React.useState(null);\r\n    const [lang, setLang] = React.useState( (localStorage.getItem('language')) ? localStorage.getItem('language') : 'en');\r\n    const { t, i18n } = useTranslation();\r\n\r\n    React.useEffect(() => {\r\n        i18n.changeLanguage(lang); localStorage.setItem('language',lang); \r\n      }, [i18n, lang]);\r\n\r\n    const handleLanguageChange = (event) => {\r\n        setLang(event.target.value);\r\n    };\r\n\r\n    const usernameChanged = event => {\r\n        setUname(event.target.value);\r\n        setUnameError(null);\r\n    }\r\n\r\n    const passwordChanged = event => {\r\n        setPsw(event.target.value);\r\n        setPswError(null);\r\n    }\r\n\r\n    const keyPress = event => {\r\n\r\n        if(event.key === \"Enter\")\r\n        {\r\n            signInClicked();\r\n        }\r\n    }\r\n\r\n    const forgotPasswordClicked = () => {\r\n        navigate(\"/password-forgot\")\r\n    }\r\n\r\n    const signUpClicked = () => {\r\n        navigate(\"/sign-up\")\r\n    }\r\n\r\n    const anonyClicked = () => {\r\n        navigate(\"/basic-main\")\r\n    }\r\n\r\n    const signInClicked = () => {\r\n        let formValid = true;\r\n\r\n        if (!uname || uname === \"\") {\r\n            setUnameError('errorProperties.SIGN_IN.SET_U_NAME_ERROR');\r\n            formValid = false;\r\n        }\r\n\r\n        if (!psw || psw === \"\") {\r\n            setPswError('errorProperties.SIGN_IN.SET_PSW_ERROR');\r\n            formValid = false;\r\n        } else if (psw.length < 6) {\r\n            setPswError('errorProperties.SIGN_IN.SET_PSW_ERROR_LENGTH');\r\n            formValid = false;\r\n        }\r\n\r\n        if (uname){\r\n            if(!emailStrIsValid(uname)){\r\n                setUnameError('errorProperties.FORGOT_PASSWORD.NOT_VALID_EMAIL')\r\n            }else{\r\n                if (formValid) continueSignIpProcess();\r\n            }   \r\n        }\r\n\r\n    }\r\n\r\n    const continueSignIpProcess = () => {\r\n        // below url is -> /localhost:3001/login\r\n        HTTP_REQUESTS.USER_SERVICE.LOGIN(\r\n            {\r\n                email: uname,\r\n                password: psw\r\n            }, (data) => {\r\n                if (data.auth_token !== \"\") {\r\n                    //SessionStorage.sessionData = data;\r\n                    /* props.enqueueSnackbar(t(\"Dashboard.Main.Logged Success\"), {\r\n                        variant: 'success',\r\n                    }) */\r\n                    SessionStorage.welcomeMessageRequest = true;\r\n                    window.open('/main','_self');\r\n                }\r\n            }, (err) => {\r\n\r\n                /* props.enqueueSnackbar(t('errorProperties.SIGN_IN.CONTINUE_SIGN_IP_PROCCES'), {\r\n                    variant: 'error'\r\n                }); */\r\n                alert(\"login failed\");\r\n                \r\n            })\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <Grid container component=\"main\" className=\"signInRoot\">\r\n            <CssBaseline />\r\n            <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n            <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n                <div>\r\n                    <Grid item container xs={12} justify=\"flex-end\" alignItems=\"center\">\r\n                        <FormControl>\r\n                            <LanguageDropdown lang={lang} onChange={handleLanguageChange} classes={classes} />\r\n                        </FormControl>\r\n                    </Grid>\r\n                </div>\r\n                <div className=\"signInPaper\">\r\n                    <VariantAvatars />\r\n                    <Avatar className=\"avatar\">\r\n                    </Avatar>\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        {t('SignIn.Sign In')}\r\n                    </Typography>\r\n                    <form className=\"form\" noValidate>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label={t('SignIn.Email')}\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            autoFocus\r\n                            onChange={usernameChanged}\r\n                            value={uname}\r\n                            helperText={t(unameError) || \" \"}\r\n                            error={t(unameError)}\r\n                            onKeyPress={keyPress}\r\n                        />\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label={t('SignIn.Password')}\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            onChange={passwordChanged}\r\n                            helperText={t(pswError) || \" \"}\r\n                            error={t(pswError)}\r\n                            onKeyPress={keyPress}\r\n                        />\r\n                        <Grid className={classes.centered}>\r\n                            <FormControlLabel\r\n                                className={classes.centered}\r\n                                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                                label={t('SignIn.Remember')}\r\n                            />\r\n                        </Grid>\r\n                        \r\n                        <Button\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                            onClick={signInClicked}                           \r\n                        >\r\n                            {t('SignIn.Sign In')}\r\n                        </Button>\r\n                        <Button\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"#841584\"\r\n                            className={classes.submit2}\r\n                            onClick={anonyClicked}                           \r\n                        >\r\n                            {t('SignIn.Play')}\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item xs={6} >\r\n                                <Link style={{ float: \"left\" }} className=\"cursor-ptr\" onClick={ forgotPasswordClicked } variant=\"body2\">\r\n                                    {t('SignIn.Forgot')}\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item xs={6} >\r\n                                <Link style={{ float: \"right\" }} className=\"cursor-ptr\" onClick={ signUpClicked } variant=\"body2\">\r\n                                    {t('SignIn.Sign Up')}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Box mt={5} className=\"box\">\r\n                        </Box>\r\n                    </form>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default SignInSide;","import React, { useEffect } from 'react';\r\nimport {  Typography } from '@material-ui/core';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport { green } from '@material-ui/core/colors';\r\nimport { useTranslation } from 'react-i18next';\r\nimport navigate from '../../navigate';\r\n\r\n\r\nconst SignUpSuccess = () => {\r\n    const { t } = useTranslation();\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => {\r\n            navigate(\"/login\");\r\n        }, 2000);\r\n      });\r\n\r\n    return (\r\n        <div style={{\r\n            position: \"fixed\",\r\n            top: \"30%\",\r\n            left: \"50%\",\r\n            transform: \"translate(-50%, -50%)\"\r\n        }}>\r\n            {<CheckCircleOutlineIcon style={{ fontSize: 200, color: green[500], width:'100%' }} align='center' />}\r\n            \r\n            <Typography component=\"h1\" variant=\"h5\" align=\"center\"  >\r\n                {t('SignUpSuccess.Congrats')}\r\n            </Typography>\r\n            <Typography component=\"h1\" variant=\"h5\" align='center'>\r\n                {t('SignUpSuccess.Success')}\r\n            </Typography>\r\n            \r\n            <Typography component=\"h1\" variant=\"h6\" align='center'>\r\n                {t('SignUpSuccess.Redirected')}\r\n            </Typography>\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignUpSuccess;\r\n\r\n","import React from 'react';\r\nimport VariantAvatars from './CompanyAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useTranslation } from 'react-i18next';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport LanguageDropdown from '../Menu/LanguageDropdown';\r\nimport navigate from '../../navigate';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(0),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', \r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    selector:{\r\n        color:'white',\r\n        fontSize:'medium',\r\n        \"& .MuiSvgIcon-root\": { color: \"black\" }\r\n    },\r\n}));\r\n\r\nconst SignUpForm = props => {\r\n    const classes = useStyles();\r\n    const [lang, setLang] = React.useState( (localStorage.getItem('language')) ? localStorage.getItem('language') : 'en');\r\n    const { t, i18n } = useTranslation();\r\n\r\n    React.useEffect(() => {\r\n        i18n.changeLanguage(lang); localStorage.setItem('language',lang); \r\n      }, [i18n, lang]);\r\n\r\n    const handleLanguageChange = (event) => {\r\n        setLang(event.target.value);\r\n    };\r\n\r\n    const onSignInClicked = () => {\r\n        navigate(\"/login\")\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Grid item container xs={12} justify=\"flex-end\" alignItems=\"center\">\r\n                <FormControl>\r\n                    <LanguageDropdown lang={lang} onChange={handleLanguageChange} classes={classes} />\r\n                </FormControl>\r\n            </Grid>\r\n        <div className=\"signInRoot\">\r\n        <div className=\"signInPaper\">\r\n            <VariantAvatars />\r\n            <Avatar className=\"avatar\">\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n                {t('SignUpForm.Sign Up')}\r\n            </Typography>\r\n            <form className=\"form\" noValidate>\r\n                <Grid container spacing={2}>\r\n                    <Grid item xs={12} sm={12}>\r\n                        <TextField\r\n                            autoComplete=\"fname\"\r\n                            name=\"nickName\"\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"nickName\"\r\n                            label={t('SignUpForm.Nickname')}\r\n                            autoFocus\r\n                            error={t(props.nickNameError)}\r\n                            helperText={t(props.nickNameError)}\r\n                            onChange={props.nickNameChanged}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"email\"\r\n                            label={t('SignUpForm.Email')}\r\n                            name=\"email\"\r\n                            autoComplete=\"email\"\r\n                            error={t(props.emailError)}\r\n                            helperText={t(props.emailError)}\r\n                            onChange={props.emailChanged}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password\"\r\n                            label={t('SignUpForm.Password')}\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            autoComplete=\"current-password\"\r\n                            error={t(props.pswError)}\r\n                            helperText={t(props.pswError)}\r\n                            onChange={props.passwordChanged}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <TextField\r\n                            variant=\"outlined\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"password2\"\r\n                            label={t('SignUpForm.Confirm')}\r\n                            type=\"password\"\r\n                            id=\"password2\"\r\n                            autoComplete=\"current-password\"\r\n                            error={t(props.pswError_2)}\r\n                            helperText={t(props.pswError_2)}\r\n                            onChange={props.passwordChanged_2}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Button\r\n                    fullWidth\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className={classes.submit}\r\n                    onClick={props.signUpCliked}\r\n                    disabled={props.opInProgress}\r\n                >\r\n                    {props.opInProgress \r\n                        ? t('SignUpForm.Attempt') \r\n                        : t('SignUpForm.Sign Up')\r\n                    }\r\n                </Button>\r\n                <Grid container justify=\"center\">\r\n                    <Grid item alignContent = \"center\">\r\n                        <Link href=\"#\" variant=\"body2\" onClick={onSignInClicked}>\r\n                            {t('SignUpForm.Already Have')}\r\n                        </Link>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n            <Box mt={5} className=\"box\">\r\n            </Box>\r\n        </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SignUpForm;","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport { HTTP_REQUESTS } from '../../backend_int/services/HttpRquestService';\r\nimport SignUpSuccess from './SignUpSuccess';\r\nimport SignUpForm from './SignUpForm';\r\nimport emailStrIsValid from \"../Helper-Functions/EmailValidation\";   \r\n\r\n\r\nfunction SignUp(props) {\r\n  const [flag,setFlag]                      = React.useState(false)\r\n  const [nickName, setNickName]           = React.useState(null);\r\n  const [nickNameError, setNickNameError] = React.useState(null);\r\n  const [email, setEmail]                   = React.useState(null);\r\n  const [emailError, setEmailError]         = React.useState(null);\r\n  const [psw, setPsw]                       = React.useState(null);\r\n  const [psw_2, setPsw_2]                   = React.useState(null);\r\n  const [pswError, setPswError]             = React.useState(null);\r\n  const [pswError_2, setPswError_2]         = React.useState(null);\r\n  const [opInProgress, setOpInProgress]     = React.useState(null);\r\n  const [opSuccess, setOpSuccess]           = React.useState(null);\r\n  \r\n\r\n\r\n  \r\n  const flagChanged = event => {\r\n    setFlag(event.target.checked);\r\n    \r\n  }\r\n  const nickNameChanged = event => {\r\n    setNickName(event.target.value);\r\n    setNickNameError(null);\r\n  }\r\n\r\n  const emailChanged = event => {\r\n    setEmail(event.target.value);\r\n    setEmailError(null);\r\n  }\r\n\r\n  const passwordChanged = event => {\r\n    setPsw(event.target.value);\r\n    setPswError(null);\r\n  }\r\n\r\n  const passwordChanged_2 = event => {\r\n    setPsw_2(event.target.value);\r\n    setPswError_2(null);\r\n  }\r\n\r\n\r\n\r\n  const signUpCliked = () => {\r\n    let formValid = true;\r\n    if (!email || email === \"\") {\r\n      setEmailError('errorProperties.SIGN_UP.SET_EMAIL_ERROR');\r\n      formValid = false;\r\n    }\r\n\r\n    if (!nickName || nickName === \"\") {\r\n      setNickNameError('errorProperties.SIGN_UP.SET_NICK_NAME_ERROR');\r\n      formValid = false;\r\n    }else if (nickName.length < 5) {\r\n      setNickNameError('errorProperties.SIGN_UP.SET_NICK_NAME_ERROR_LENGTH');\r\n      formValid = false;\r\n    }\r\n    \r\n    if (!psw || psw === \"\") {\r\n      setPswError('errorProperties.SIGN_UP.SET_PSW_ERROR');\r\n      formValid = false;\r\n    }else if(psw.length<6){\r\n      setPswError('errorProperties.SIGN_UP.SET_PSW_ERROR_LENGTH');\r\n      formValid = false;\r\n    }\r\n\r\n    if (!psw_2 || psw_2 === \"\") {\r\n      setPswError_2('errorProperties.SIGN_UP.SET_PSW_ERROR_2')\r\n      formValid = false;\r\n    }else if(psw !== psw_2){\r\n      setPswError_2('errorProperties.SIGN_UP.SET_PSW_ERROR_NOT_SAME')\r\n      formValid = false;\r\n    }\r\n\r\n    if (email){\r\n      if(!emailStrIsValid(email)){\r\n          setEmailError('errorProperties.FORGOT_PASSWORD.NOT_VALID_EMAIL')\r\n      }else{\r\n          if (formValid) processSignUp();\r\n      }   \r\n  }\r\n\r\n  }\r\n\r\n  const processSignUp = () => {\r\n    let params = { name: nickName, email: email, password: psw };\r\n    setOpInProgress(true);\r\n    setTimeout(()=>{\r\n      HTTP_REQUESTS.USER_SERVICE.REGISTER(\r\n        params, (data) => {\r\n          setOpInProgress(false);\r\n          setOpSuccess(true);\r\n          /* setTimeout(()=>{props.onRegistrationSuccess(email);}\r\n            ,3000) */\r\n        }, (err) => {\r\n          try{\r\n          }catch(err){\r\n            /* props.enqueueSnackbar(t('errorProperties.SIGN_UP.PROCESS_SIGN_UP'),{variant: 'error'}); */\r\n          }\r\n          setOpInProgress(false);\r\n  \r\n        })\r\n    },1000)\r\n    \r\n    \r\n\r\n  }\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\" className=\"signUpRoot\">\r\n      <CssBaseline />\r\n      {opSuccess ? <SignUpSuccess/>\r\n      :<SignUpForm  nickNameChanged    = {nickNameChanged}\r\n                    emailChanged        = {emailChanged}\r\n                    passwordChanged     = {passwordChanged}\r\n                    passwordChanged_2   = {passwordChanged_2}\r\n                    flagChanged         = {flagChanged}\r\n                    signUpCliked        = {signUpCliked}\r\n                    nickNameError       = {nickNameError}\r\n                    emailError          = {emailError}\r\n                    pswError            = {pswError} \r\n                    pswError_2          = {pswError_2} \r\n                    opInProgress        = {opInProgress} \r\n                    onSignInClicked     = {props.onSignInClicked}/>} \r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignUp","import React from 'react';\r\nimport SignIn from './SignIn';\r\nimport SignUp from './SignUp';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport navigate from '../../navigate';\r\n\r\n\r\n\r\nfunction Login(props) {\r\n\r\n    const [content, setContent] = React.useState(<SignIn onSignUpClicked={()=>this.onSignUpClicked()} />);\r\n    const [animationStart, setAnimationStart] = React.useState(true);\r\n    const [direction, setDirection] = React.useState(\"up\");\r\n    const [timeout, setTimeout] = React.useState(0);\r\n\r\n\r\n    const onSignUpClicked = () =>{\r\n       \r\n        const signUpComponent = <SignUp onSignInClicked={() => onSignInClicked()} />;\r\n\r\n        setTimeout(200);\r\n        setAnimationStart(false)\r\n        setTimeout(()=>{\r\n            setContent(signUpComponent)\r\n            setAnimationStart(true)\r\n            setDirection(\"left\")\r\n        },300)    \r\n        \r\n    }\r\n\r\n    const onSignInClicked = (email,withoutAnimation) =>{\r\n        const signInComponent = <SignIn onSignUpClicked={() => onSignUpClicked()} />;\r\n        if(withoutAnimation){\r\n            setContent(signInComponent)\r\n            return;\r\n        }\r\n        setAnimationStart(false)\r\n            setTimeout(()=>{\r\n                setContent(signInComponent)\r\n                setAnimationStart(true)\r\n                setDirection(\"up\")\r\n            },300) \r\n\r\n        navigate(\"/login\")\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <Slide direction={direction} timeout={timeout} in={animationStart} mountOnEnter unmountOnExit>\r\n        <div>\r\n            {content}\r\n        </div>\r\n        </Slide>\r\n        </div>\r\n\r\n    )\r\n\r\n    \r\n}\r\n\r\nexport default Login;","//import { Button, Card } from '@material-ui/core';\r\nimport { createTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createTheme({\r\n\r\n    palette: {\r\n        primary: {\r\n            main: '#102542'\r\n        },\r\n        secondary: {\r\n            main: '#EFEFEF'\r\n        },\r\n        danger: {\r\n            backgroundColor: '#A70C00',\r\n            color: '#ffff',\r\n          },\r\n        disabled: {\r\n            backgroundColor: 'rgba(0, 0, 0, 0.12)',\r\n            color: 'rgba(0, 0, 0, 0.26)',\r\n        }\r\n    },\r\n    typography: {\r\n        fontFamily: \"'stolzl', 'Poppins', sans-serif\",\r\n    },\r\n    overrides:{\r\n        MuiCssBaseline:{\r\n            '@global': {\r\n                backgroundColor: '#fafafa'\r\n            }\r\n        },\r\n        MuiCard:{\r\n            root: {\r\n                padding: '16px'\r\n            }\r\n        },\r\n        MuiCheckbox: {\r\n            colorSecondary: {\r\n              color: '#102542F',\r\n              '&$checked': {\r\n                color: '#102542',\r\n              },\r\n            },\r\n        },\r\n        MuiRadio: {\r\n            colorSecondary: {\r\n              color: '#102542F',\r\n              '&$checked': {\r\n                color: '#102542',\r\n              },\r\n            },\r\n        }\r\n\r\n\r\n    }\r\n})\r\ntheme.overrides.MuiCssBaseline['@global'] = {\r\n    body: {\r\n        backgroundColor: theme.palette.secondary.main\r\n    }\r\n}\r\n\r\nexport default theme;","import React,{/* useContext */} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { HTTP_REQUESTS } from \"../../backend_int/services/HttpRquestService\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport theme from \"../../theme\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function LogoutConfirmDialog(props) {\r\n  const { t } = useTranslation();\r\n  //const context = useContext(AppContext);\r\n  const { onClose, open } = props;\r\n\r\n  const handleBack = () => {\r\n    onClose(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    //Saving User Preferences\r\n \r\n\r\n    HTTP_REQUESTS.USER_SERVICE.LOGOUT(\r\n      data => {\r\n        // let userPrefs = UserPreferences.setUserPreferences(context.email);\r\n        let language = localStorage.getItem('language');\r\n        localStorage.clear();\r\n        localStorage.setItem('language' , language)\r\n        // localStorage.setItem('userPreferences',JSON.stringify(userPrefs));\r\n\r\n        window.open(\"/login\",'_self');\r\n      },\r\n      err => {\r\n        alert(\"error occured during logout\")\r\n      }\r\n    ); \r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleBack}\r\n        aria-labelledby=\"logout-title\"\r\n        aria-describedby=\"logout-description\"\r\n      >\r\n        <DialogTitle id=\"logout-title\">{t('LogoutConfirmDialog.Confirm')}</DialogTitle>\r\n        <DialogContent>\r\n          {t('LogoutConfirmDialog.Logout System')}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleBack} style={{color: theme.palette.danger.backgroundColor}}>\r\n            {t('LogoutConfirmDialog.Cancel')}\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleClose} color=\"primary\">\r\n            {t('LogoutConfirmDialog.Logout')}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n \r\nconst AppContext = React.createContext();\r\n \r\nexport default AppContext;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Unity, { UnityContext } from \"react-unity-webgl\";\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    main : {\r\n/*         backgroundImage: 'url(images/asd.jpg)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center',\r\n        paddingTop:\"50px\", */\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    }\r\n\r\n}));\r\n\r\n/* const WhiteTextTypography = withStyles({\r\n    root: {\r\n      color: \"#ecf0f1\"\r\n    }\r\n  })(Typography);\r\n\r\n  const BlueTextTypography = withStyles({\r\n    root: {\r\n      color: \"#2c3e50\",\r\n    }\r\n  })(Typography); */\r\n\r\n  const unityContext = new UnityContext({\r\n    loaderUrl: \"WebGL/Build/WebGL.loader.js\",\r\n    dataUrl: \"WebGL/Build/WebGL.data\",\r\n    frameworkUrl: \"WebGL/Build/WebGL.framework.js\",\r\n    codeUrl: \"WebGL/Build/WebGL.wasm\",\r\n  });\r\n\r\n\r\nexport default function Game(props) {\r\n    \r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <div className={classes.main} >\r\n\r\n            <Unity \r\n            unityContext={unityContext} \r\n            style={{\r\n                width: '1800px',\r\n                height: '800px',\r\n                border: '2px solid black',\r\n                background: 'green'\r\n            }}\r\n            />\r\n            \r\n        </div>\r\n    );\r\n}","import React,{useContext} from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport DashboardOutlinedIcon from '@material-ui/icons/DashboardOutlined';\r\nimport SportsEsportsIcon from '@material-ui/icons/SportsEsports';\r\nimport Search from '@material-ui/icons/Search';\r\nimport LogoutConfirmDialog from './LogoutConfirmDialog';\r\nimport PowerSettingsNewOutlinedIcon from '@material-ui/icons/PowerSettingsNewOutlined';\r\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined';\r\nimport navigate from '../../navigate';\r\nimport AppContext  from \"../../AppContext\";\r\nimport { Box, Grid, Hidden } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport LanguageDropdown from './LanguageDropdown';\r\nimport WelcomePage from './WelcomePage';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    backgroundColor: \"#2c3e50\"\r\n  },\r\n  appBarShift: {\r\n    width: `100%`,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    width: `100%`,\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n     marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    display: 'block',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 80,\r\n    size: 'small'\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  selector:{\r\n    color:'white',\r\n    fontSize:'medium',\r\n    \"& .MuiSvgIcon-root\": { color: \"white\" }\r\n  },\r\n  selector2:{\r\n    color:'white',\r\n    fontSize:'medium',\r\n    \"& .MuiSvgIcon-root\": { color: \"grey\" }\r\n  },\r\n  w100:{\r\n    width:'100%'\r\n  },\r\n  left45: {\r\n    left:'45px'\r\n  },\r\n  deleteIcon4: {\r\n    \"& svg\": { fontSize: 1000 } \r\n  }\r\n    \r\n\r\n}));\r\n\r\nconst WhiteTextTypography = withStyles({\r\n  root: {\r\n    color: \"#ecf0f1\",\r\n    fontWeight: \"bold\"\r\n  }\r\n})(Typography);\r\n\r\nexport default function LeftDrawer(props) {\r\n  const context = useContext(AppContext);\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  \r\n  const [open, setOpen] = React.useState(localStorage.getItem(\"LeftDrawer\") === \"true\");\r\n  const [openLogout, setOpenLogout] = React.useState(false);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [lang, setLang] = React.useState( (localStorage.getItem('language')) ? localStorage.getItem('language') : 'en');\r\n  const [isMain , setIsMain] = React.useState(props.isMain);\r\n  \r\n  const openUserMenu = Boolean(anchorEl);\r\n  const { t, i18n } = useTranslation();\r\n\r\n  React.useEffect(() => {\r\n    var currentUrl = window.location.href;\r\n    if (currentUrl.includes(\"main\")) {\r\n      setIsMain(true);\r\n    }\r\n  }, []);\r\n\r\n\r\n  React.useEffect(() => {\r\n    i18n.changeLanguage(lang); localStorage.setItem('language',lang); \r\n  }, [i18n, lang]);\r\n\r\n\r\n  const handleDrawerClose = () => {\r\n    localStorage.setItem(\"LeftDrawer\", false);\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleMenu = event => {\r\n    setAnchorEl(event.currentTarget);\r\n\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n\r\n  const handleOpenLogout = () => {\r\n    setOpenLogout(true);\r\n    handleClose();\r\n  };\r\n\r\n  const handleCloseLogout = () => {\r\n    setOpenLogout(false);\r\n  };\r\n\r\n  const handleOpenProfile = () => {\r\n   setIsMain(false);\r\n   navigate(\"/profile\")\r\n   handleClose();\r\n  };\r\n\r\n  const handleLanguageChange = (event) => {\r\n    setLang(event.target.value);\r\n  };\r\n  const mainClick = (event) => {\r\n    localStorage.setItem(\"LeftDrawer\", false);\r\n    setOpen(false);\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n         className={clsx(classes.appBar, \r\n        )}\r\n      >\r\n        <Toolbar>\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={2} md={4} container alignItems=\"center\"> \r\n{/*               <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open drawer\"\r\n                onClick={handleDrawerOpen}\r\n                edge=\"start\"\r\n                className={clsx(classes.menuButton, open && classes.hide)}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton> */}\r\n              {\r\n                isMain \r\n                ?               \r\n                <Button onClick={() => { navigate(\"/how-to-play\"); setIsMain(false);}}>\r\n                    <WhiteTextTypography>{t(\"LeftDrawer.How To\")}</WhiteTextTypography>\r\n                </Button>\r\n                : \r\n                <Button onClick={() => { navigate(\"/main\"); setIsMain(true);}}>\r\n                    <WhiteTextTypography>{t(\"LeftDrawer.Play\")}</WhiteTextTypography>\r\n                </Button>\r\n              }\r\n\r\n            </Grid>\r\n            \r\n            <Grid item container xs={8} md={4} justify=\"center\" alignItems=\"center\">\r\n              <div>\r\n              <Typography variant=\"h6\" className={classes.title} align=\"center\" style={{maxWidth: '100%'}}>\r\n                <span style={{cursor : \"pointer\" }} onClick={() => { navigate(\"/main\"); setIsMain(true)}}>\r\n                  <Box component=\"div\" textOverflow=\"ellipsis\" overflow=\"hidden\" whiteSpace=\"nowrap\">\r\n                    {t('LeftDrawer.Title')}\r\n                  </Box>\r\n                </span>\r\n              </Typography>\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid item container xs={2} md={4} justify=\"flex-end\" alignItems=\"center\">\r\n              <Hidden mdDown>\r\n                <FormControl >\r\n                  <LanguageDropdown lang={lang} onChange={handleLanguageChange} classes={classes} />\r\n                </FormControl>\r\n              </Hidden>\r\n\r\n             <Hidden smDown>\r\n                <Typography style={{display: 'inline-block',maxWidth: '150px'}}>\r\n                  <Box component=\"div\" textOverflow=\"ellipsis\" overflow=\"hidden\" whiteSpace=\"nowrap\">{context.name}</Box>\r\n                </Typography>\r\n             </Hidden>\r\n\r\n              <IconButton\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <AccountCircle />\r\n              </IconButton>\r\n              <Menu\r\n                    id=\"menu-appbar\"\r\n                    anchorEl={anchorEl}\r\n                    anchorOrigin={{\r\n                      vertical: 'top',\r\n                      horizontal: 'right',\r\n                    }}\r\n                    keepMounted\r\n                    transformOrigin={{\r\n                      vertical: 'top',\r\n                      horizontal: 'right',\r\n                    }}\r\n                    open={openUserMenu}\r\n                    onClose={handleClose}\r\n                  >\r\n                   <Hidden mdUp>\r\n                      <Typography align='center' style={{display: 'block', fontWeight: 'bold'}}>\r\n                        {context.name}\r\n                      </Typography>\r\n                   </Hidden>\r\n                     \r\n                      <MenuItem onClick={handleOpenProfile} > \r\n                        <ListItemIcon>\r\n                          <AccountCircleOutlinedIcon fontSize=\"large\" style={{marginRight:\"6px\"}}/> \r\n                        </ListItemIcon>\r\n                        {t('LeftDrawer.Profile')}\r\n                      </MenuItem>\r\n\r\n                    \r\n                    \r\n                  \r\n                  <Hidden lgUp>\r\n                    <MenuItem >\r\n                      <ListItemIcon className={classes.w100}>\r\n                      <FormControl className={classes.w100} >\r\n                        <LanguageDropdown lang={lang} onChange={handleLanguageChange} classes={classes.w100 + ' ' + classes.selector2} classesObject={{'icon' : classes.left45}}/>\r\n                      </FormControl> \r\n                      </ListItemIcon>\r\n                    </MenuItem>\r\n                  </Hidden>\r\n\r\n                    <MenuItem onClick={handleOpenLogout} button key={'Logout'}>\r\n                      <ListItemIcon>\r\n                        <PowerSettingsNewOutlinedIcon fontSize=\"large\" style={{color:\"red\"}}/> \r\n                      </ListItemIcon>\r\n                      {t('LeftDrawer.Logout')}\r\n                    </MenuItem>\r\n                    <LogoutConfirmDialog  open = {openLogout} onClose={handleCloseLogout}/>\r\n                    \r\n                    \r\n                  </Menu>\r\n            </Grid>\r\n          </Grid>\r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <ListItem button onClick={() => { localStorage.setItem(\"LeftDrawer\", true);navigate(\"/main\" ); setIsMain(true); }}>\r\n          <ListItemIcon style={{ color: \"blue\" }}><DashboardOutlinedIcon /> </ListItemIcon>\r\n          <ListItemText primary={t('LeftDrawer.Main')} />\r\n        </ListItem>\r\n        <Divider />\r\n        \r\n          <ListItem button onClick={() => { localStorage.setItem(\"LeftDrawer\", true);navigate(\"/how-to-play\"); setIsMain(false);}}>\r\n          <ListItemIcon style={{ color: \"red\" }}><Search /> </ListItemIcon>\r\n          <ListItemText primary={t('LeftDrawer.How To')} />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem  button onClick={() => { localStorage.setItem(\"LeftDrawer\", true);navigate(\"/game\"); setIsMain(false);}}>\r\n          <ListItemIcon  style={{ color: \"orange\"}}><SportsEsportsIcon /> </ListItemIcon>\r\n          <ListItemText primary={t('LeftDrawer.Game')} />\r\n          </ListItem>\r\n          <Divider />\r\n\r\n\r\n\r\n\r\n\r\n        <List>\r\n        </List>\r\n      </Drawer>\r\n      <main\r\n      onClick={mainClick}\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        <div className=\"innerComponent\">\r\n          {props.innerComponent}\r\n        </div>\r\n        {isMain ? <WelcomePage name={context.name} setIsMain={setIsMain} /> : null}\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport LeftDrawer from '../Menu/LeftDrawer';\r\nimport HTTPClient from '../../backend_int/http_client/HttpClient';\r\nimport SessionStorage from '../Helper-Functions/SessionStorage';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\nclass Main extends React.Component {\r\n    componentDidMount() {\r\n\r\n        if (SessionStorage.shouldBeDisplayWelcomeMessage) {\r\n            SessionStorage.welcomeMessageRequest = false;\r\n        }\r\n        HTTPClient._notifierFunc = this.props.enqueueSnackbar;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"mainPage\">\r\n                <LeftDrawer/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default withTranslation(Main);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport navigate from '../../navigate';\r\nimport { Box, Drawer, Grid, Hidden } from '@material-ui/core';\r\nimport { useTranslation } from 'react-i18next';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport LanguageDropdown from './LanguageDropdown';\r\nimport WelcomePage from './WelcomePage';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst drawerWidth = 300;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    backgroundColor: \"#2c3e50\"\r\n  },\r\n  appBarShift: {\r\n    width: `100%`,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    width: `100%`,\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n     marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  button: {\r\n    display: 'block',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 80,\r\n    size: 'small'\r\n  },\r\n  modal: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n  paper: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '2px solid #000',\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n  selector:{\r\n    color:'white',\r\n    fontSize:'medium',\r\n    \"& .MuiSvgIcon-root\": { color: \"white\" }\r\n  },\r\n  selector2:{\r\n    color:'white',\r\n    fontSize:'medium',\r\n    \"& .MuiSvgIcon-root\": { color: \"grey\" }\r\n  },\r\n  w100:{\r\n    width:'100%'\r\n  },\r\n  left45: {\r\n    left:'45px'\r\n  },\r\n  deleteIcon4: {\r\n    \"& svg\": { fontSize: 1000 } \r\n  }\r\n    \r\n\r\n}));\r\n\r\nconst WhiteTextTypography = withStyles({\r\n  root: {\r\n    color: \"#ecf0f1\",\r\n    fontWeight: \"bold\"\r\n  }\r\n})(Typography);\r\n\r\nexport default function LeftDrawer2(props) {\r\n\r\n  const classes = useStyles();\r\n  \r\n  const [open, setOpen] = React.useState(localStorage.getItem(\"LeftDrawer\") === \"true\");\r\n  const [lang, setLang] = React.useState( (localStorage.getItem('language')) ? localStorage.getItem('language') : 'en');\r\n  const [isMain , setIsMain] = React.useState(false);\r\n  \r\n\r\n  const { t, i18n } = useTranslation();\r\n\r\n  React.useEffect(() => {\r\n    var currentUrl = window.location.href;\r\n    if (currentUrl.includes(\"main\")) {\r\n      setIsMain(true);\r\n    }\r\n  }, []);\r\n\r\n\r\n  React.useEffect(() => {\r\n    i18n.changeLanguage(lang); localStorage.setItem('language',lang); \r\n  }, [i18n, lang]);\r\n\r\n  const handleLanguageChange = (event) => {\r\n    setLang(event.target.value);\r\n  };\r\n  const mainClick = (event) => {\r\n    localStorage.setItem(\"LeftDrawer\", false);\r\n    setOpen(false);\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n         className={clsx(classes.appBar, \r\n        )}\r\n      >\r\n        <Toolbar>\r\n          <Grid container className={classes.root} spacing={2}>\r\n            <Grid item xs={2} md={4} container alignItems=\"center\"> \r\n              {\r\n                isMain \r\n                ?               \r\n                <Button onClick={() => { navigate(\"/basic-how-to-play\"); setIsMain(false);}}>\r\n                    <WhiteTextTypography>{t(\"LeftDrawer.How To\")}</WhiteTextTypography>\r\n                </Button>\r\n                : \r\n                <Button onClick={() => { navigate(\"/basic-main\"); setIsMain(true);}}>\r\n                    <WhiteTextTypography>{t(\"LeftDrawer.Play\")}</WhiteTextTypography>\r\n                </Button>\r\n              }\r\n\r\n            </Grid>\r\n            \r\n            <Grid item container xs={8} md={4} justify=\"center\" alignItems=\"center\">\r\n              <div>\r\n              <Typography variant=\"h6\" className={classes.title} align=\"center\" style={{maxWidth: '100%'}}>\r\n                <span style={{cursor : \"pointer\" }} onClick={() => { navigate(\"/basic-main\"); setIsMain(true)}}>\r\n                  <Box component=\"div\" textOverflow=\"ellipsis\" overflow=\"hidden\" whiteSpace=\"nowrap\">\r\n                    {t('LeftDrawer.Title')}\r\n                  </Box>\r\n                </span>\r\n              </Typography>\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid item container xs={2} md={4} justify=\"flex-end\" alignItems=\"center\">\r\n              <Hidden mdDown>\r\n                <FormControl >\r\n                  <LanguageDropdown lang={lang} onChange={handleLanguageChange} classes={classes} />\r\n                </FormControl>\r\n              </Hidden>\r\n\r\n             <Hidden smDown>\r\n                <Typography style={{display: 'inline-block',maxWidth: '150px'}}>\r\n                  <Box component=\"div\" textOverflow=\"ellipsis\" overflow=\"hidden\" whiteSpace=\"nowrap\">{props.myName}</Box>\r\n                </Typography>\r\n             </Hidden>\r\n\r\n             <Button onClick={() => { navigate(\"/login\"); setIsMain(true);}}>\r\n                    <WhiteTextTypography>{t(\"LeftDrawer.Login\")}</WhiteTextTypography>\r\n                </Button>\r\n              <Button onClick={() => { navigate(\"/sign-up\"); setIsMain(true);}}>\r\n                    <WhiteTextTypography>{t(\"LeftDrawer.Register\")}</WhiteTextTypography>\r\n              </Button>\r\n\r\n            </Grid>\r\n          </Grid>\r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n\r\n        </div>\r\n\r\n        \r\n\r\n\r\n\r\n\r\n\r\n\r\n      </Drawer>\r\n      <main \r\n      onClick={mainClick}\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        <div className=\"innerComponent\" >\r\n          {props.innerComponent}\r\n        </div>\r\n        {isMain ? <WelcomePage name={\"random name 3\"} setIsMain={setIsMain} /> : null}\r\n      </main>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LeftDrawer2 from '../Menu/LeftDrawer2';\r\n\r\nconst nickNamesDictionary = [\r\n    \"Anonymous crow\",\r\n    \"Anonymous pigeon\",\r\n    \"Anonymous robin\",\r\n    \"Anonymous woodpecker\",\r\n    \"Anonymous sparrow\",\r\n    \"Anonymous kingfisher\",\r\n    \"Anonymous warbler\",\r\n    \"Anonymous bulbul\",\r\n    \"Anonymous drongo\",\r\n    \"Anonymous seagulls\",\r\n    \"Anonymous flamingo\",\r\n    \"Anonymous eagles\",\r\n    \"Anonymous owl\",\r\n    \"Anonymous kite\",\r\n    \"Anonymous parakeet\",\r\n    \"Anonymous beeeater\",\r\n    \"Anonymous munia\",\r\n    \"Anonymous dove\",\r\n    \"Anonymous peacock\",\r\n    \"Anonymous oriole\",\r\n    \"Anonymous flycatcher\",\r\n    \"Anonymous quail\",\r\n    \"Anonymous magpie\",\r\n    \"Anonymous roller\",\r\n    \"Anonymous emu\",\r\n    \"Anonymous sunbird\",\r\n    \"Anonymous starling\",\r\n    \"Anonymous rockthrush\",\r\n    \"Anonymous barnowl\",\r\n    \"Anonymous goose\",\r\n    \"Anonymous duck\",\r\n    \"Anonymous trogon\",\r\n    \"Anonymous nightjar\",\r\n    \"Anonymous barbet\",\r\n  ];\r\n\r\n  let myNickname;\r\n\r\nfunction Basic(props) {\r\n\r\n    if (localStorage.getItem(\"flappy-nickname\")) {\r\n        myNickname = localStorage.getItem(\"flappy-nickname\");\r\n    } else {\r\n        myNickname = nickNamesDictionary[Math.floor(Math.random() * 34)];\r\n        localStorage.setItem(\"flappy-nickname\", myNickname);\r\n    }\r\n\r\n    return (\r\n        <Grid container component=\"main\" className=\"signInRoot\">\r\n            <CssBaseline />\r\n            <Grid item xs={12} sm={12} md={12} component={Paper} elevation={6} square>\r\n                <div>\r\n                    <LeftDrawer2 myName={myNickname}/>\r\n                </div>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Basic;","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\nvar Spinner = require('react-spinkit');\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    spinContainer : {\r\n        height: '25vh',\r\n        width: '25vw',\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n\r\n    customSpinner : {\r\n        height: '15vh',\r\n        width: '10vh',\r\n        color: \"#2c3e50\"\r\n    }\r\n}));\r\n\r\nexport default function RegisterEntityCard(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={5} justify=\"center\" alignItems=\"center\">\r\n                <div className={classes.spinContainer}>\r\n                    <Spinner name=\"circle\" className={classes.customSpinner} fadeIn={0}/>\r\n                </div>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {Redirect} from \"react-router-dom\";\r\nimport CustomSpinner from './CustomSpinner';\r\nimport AppContext from \"../AppContext\";\r\n\r\nexport default function PrivateRoute(props) { \r\n\r\n  if(props.isLoading) {\r\n      return <div><CustomSpinner/></div>\r\n  }\r\n  if(!props.isAuthenticated) {\r\n      return <Redirect to=\"/login\" />\r\n  }\r\n  \r\n  return <AppContext.Provider value={props.contextData}>\r\n       <div>{props.component}</div>\r\n      </AppContext.Provider>\r\n}\r\n","import React,{useContext,useEffect} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport moment from \"moment\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Avatar,\r\n  Typography,\r\n  Divider,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport AppContext  from \"../../AppContext\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport theme from \"../../theme\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  details: {\r\n    display: \"flex\",\r\n  },\r\n  avatar: {\r\n    marginLeft: \"auto\",\r\n\r\n    height: 150,\r\n    width: 150,\r\n    flexShrink: 0,\r\n    flexGrow: 0,\r\n  },\r\n  uploadButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  input: {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\n\r\nconst AccountProfile = (props) => {\r\n  const { t } = useTranslation();\r\n  const context = useContext(AppContext);\r\n  const { className, ...rest } = props;\r\n  \r\n  const [fName, setFName] = React.useState(context.name);\r\n  const [time,setTime] = React.useState(\r\n        new Date()\r\n      );\r\n  \r\n      useEffect(() => {\r\n        const interval = setInterval(\r\n          () => setTime(new Date()),\r\n          1000\r\n        );\r\n    \r\n        return () => {\r\n          clearInterval(interval);\r\n        }\r\n      }, []);\r\n  \r\n  const classes = useStyles();\r\n\r\n  const handleImage = (event) => {\r\n    props.setImage(event.target.files[0]);\r\n    props.setAvatar(URL.createObjectURL(event.target.files[0]));\r\n    event.target.value = null\r\n  };\r\n  const handleRemove = () => {\r\n    props.setAvatar(null);\r\n    props.setImage(null)\r\n  };\r\n\r\n  return (\r\n    <Card {...rest} className={clsx(classes.root, className)}>\r\n      <CardContent>\r\n        <div className={classes.details}>\r\n          <div>\r\n            <Typography gutterBottom variant=\"h5\">\r\n              {`${fName}`}\r\n            </Typography>\r\n            <Typography\r\n              className={classes.locationText}\r\n              color=\"textSecondary\"\r\n              variant=\"body1\"\r\n            >\r\n              Hacettepe CS\r\n            </Typography>\r\n            <Typography\r\n              className={classes.dateText}\r\n              color=\"textSecondary\"\r\n              variant=\"body1\"\r\n            >\r\n              {t('AccountProfile.Time') + moment(time).format(\"hh:mm A\")}\r\n            </Typography>\r\n          </div>\r\n          <Avatar className={classes.avatar} src={props.avatar} />\r\n        </div>\r\n      </CardContent>\r\n      <Divider />\r\n      \r\n        <CardActions>\r\n          <input\r\n            accept=\"image/*\"\r\n            className={classes.input}\r\n            id=\"contained-button-file\"\r\n            multiple={false}\r\n            onChange={handleImage}\r\n            type=\"file\"\r\n            name= \"image\"\r\n          />\r\n            <label htmlFor=\"contained-button-file\">\r\n              <Button\r\n                variant=\"text\"\r\n                color=\"primary\"\r\n                className={classes.uploadButton}\r\n                component=\"span\"                \r\n                >\r\n                {t('AccountProfile.Upload')}\r\n              </Button>\r\n            </label>\r\n              <Button variant=\"text\" onClick={handleRemove} style={{color: theme.palette.danger.backgroundColor}}>\r\n                {t('AccountProfile.Remove')}\r\n              </Button>\r\n         \r\n        </CardActions>\r\n      \r\n      \r\n    </Card>\r\n  );\r\n};\r\n\r\nAccountProfile.propTypes = {\r\n  className: PropTypes.string,\r\n};\r\n\r\nexport default AccountProfile;\r\n","import React,{useContext} from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\nimport { HTTP_REQUESTS } from \"../../backend_int/services/HttpRquestService\";\r\nimport AppContext  from \"../../AppContext\";\r\nimport { useTranslation } from 'react-i18next';\r\nimport theme from \"../../theme\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function DeleteConfirmDialog(props) {\r\n  const { t } = useTranslation();\r\n  const context = useContext(AppContext);\r\n  const { onClose, open } = props;\r\n\r\n  const handleBack = () => {\r\n    onClose(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n\r\n    let id = context._id\r\n    let obj = {}\r\n    obj.deletedTime = Date.now();\r\n    obj.reasonForDelete = \"deleted manually\";\r\n    obj.deletedBy = id;\r\n    HTTP_REQUESTS.USER_SERVICE.DELETE_ONE_TENANT_USER(id,obj,res=> {\r\n        alert(\"user deleted\");\r\n    }, err => {\r\n      alert(\"An error occured during deleting\")\r\n    })\r\n \r\n    setTimeout(() => {\r\n        HTTP_REQUESTS.USER_SERVICE.LOGOUT(\r\n            data => {\r\n      \r\n              let language = localStorage.getItem('language');\r\n              localStorage.clear();\r\n              localStorage.setItem('language' , language)\r\n      \r\n              window.open(\"/login\",'_self');\r\n            },\r\n            err => {\r\n              alert(\"Error occured during logout process\")\r\n            }\r\n          ); \r\n    }, 1000);\r\n\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleBack}\r\n        aria-labelledby=\"delete-title\"\r\n        aria-describedby=\"delete-description\"\r\n      >\r\n        <DialogTitle id=\"delete-title\">{t('DeleteConfirmDialog.Confirm Delete')}</DialogTitle>\r\n        <DialogContent>\r\n          {t('DeleteConfirmDialog.Delete Account')}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleBack} style={{color: theme.palette.danger.backgroundColor}}>\r\n            {t('LogoutConfirmDialog.Cancel')}\r\n          </Button>\r\n          <Button variant=\"contained\" onClick={handleClose} color=\"primary\">\r\n            {t('DeleteConfirmDialog.Delete')}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React,{useContext} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Card, Grid } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport AccountProfileCard from \"./AccountProfile\";\r\nimport { HTTP_REQUESTS } from \"../../backend_int/services/HttpRquestService\";\r\nimport AppContext  from \"../../AppContext\";\r\nimport navigate from '../../navigate';\r\nimport { useTranslation } from 'react-i18next';\r\nimport theme from \"../../theme\";\r\nimport DeleteConfirmDialog from \"./DeleteConfirmDialog\";\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: \"relative\",\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  profile: {\r\n    width: 100,\r\n    height: 100,\r\n    position: \"inherit\",\r\n    top: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n\r\n    margin: \"auto\",\r\n  },\r\n  paper: {\r\n    marginTop: theme.spacing(0),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", \r\n  },\r\n\r\n  cancel: {\r\n    backgroundColor: theme.palette.danger\r\n  }\r\n}));\r\n\r\n\r\nfunction Profile(props) {\r\n  const { t } = useTranslation();\r\n  const context = useContext(AppContext);\r\n  const classes = useStyles();\r\n  const [firstName, setFirstName] = React.useState(context.name);\r\n  const [firstNameError, setFirstNameError] = React.useState(null);\r\n  const [ avatar, setAvatar] = React.useState(/* context.profilePic */);\r\n  const [image, setImage] = React.useState(null);\r\n  const [email, setEmail] = React.useState(context.email);\r\n  const [emailError, setEmailError] = React.useState(null);\r\n  const [psw, setPsw] = React.useState(null);\r\n  const [pswError, setPswError] = React.useState(null);\r\n  const [newPsw, setNewPsw] = React.useState(null);\r\n  const [newPswError, setNewPswError] = React.useState(null);\r\n  const [openLogout, setOpenLogout] = React.useState(false);\r\n\r\n\r\n\r\n  const handleCloseLogout = () => {\r\n    setOpenLogout(false);\r\n  };\r\n\r\n  const firstNameChanged = (event) => {\r\n    setFirstName(event.target.value);\r\n    setFirstNameError(null);\r\n  };\r\n\r\n\r\n  const emailChanged = (event) => {\r\n    setEmail(event.target.value);\r\n    setEmailError(null);\r\n  };\r\n\r\n  const passwordChanged = (event) => {\r\n    setPsw(event.target.value);\r\n    setPswError(null);\r\n  };\r\n\r\n  const newPasswordChanged = (event) => {\r\n    setNewPsw(event.target.value);\r\n    setNewPswError(null);\r\n  };\r\n  const saveClicked = () => {\r\n    let formValid = true\r\n    if (!email || email === \"\") {\r\n      setEmailError('errorProperties.PROFILE.SAVE_CLICKED.SET_EMAIL_ERROR');\r\n      formValid = false\r\n    }\r\n    if (!firstName || firstName === \"\") {\r\n      setFirstNameError('errorProperties.PROFILE.SAVE_CLICKED.SET_NICK_NAME_ERROR');\r\n      formValid = false\r\n    }\r\n    if (!psw || psw === \"\") {\r\n      \r\n    } else {\r\n\r\n      if (!newPsw || newPsw === \"\" || newPsw===\"null\") {\r\n        setNewPswError('errorProperties.PROFILE.SAVE_CLICKED.SET_PSW_ERROR');\r\n        formValid = false\r\n      } else if (newPsw.length < 6) {\r\n        setNewPswError('errorProperties.PROFILE.SAVE_CLICKED.SET_PSW_ERROR_LENGTH');\r\n        formValid = false\r\n      } else {\r\n      \r\n      }\r\n    }\r\n    if (formValid) onSaveChanges();\r\n  };\r\n\r\n  const deleteClicked = () => {\r\n    setOpenLogout(true);\r\n  }\r\n\r\n  const onSaveChanges = () => {\r\n\r\n      if(newPsw===\"\" || !newPsw || newPsw===\"null\"){\r\n        let params1 = {\r\n            name: `${firstName}`,\r\n          };\r\n\r\n          HTTP_REQUESTS.USER_SERVICE.UPDATE_ONE_TENANT_USER(context._id,params1,response=>{\r\n            context.name=params1.name;\r\n            //props.enqueueSnackbar(t('Profile.Profile Updated'), { variant: \"success\" });\r\n            alert(\"profile updated\");\r\n            \r\n        },fail=>{\r\n            //props.enqueueSnackbar(t('errorProperties.PROFILE.ON_SAVE_CHANGES.IF_PASSWORD_EMPTY'), { variant: \"error\" });\r\n            alert(\"profile updating failed\");\r\n        })\r\n      }\r\n      else {\r\n\r\n        HTTP_REQUESTS.USER_SERVICE.CHECK_PSW(context._id, { psw: psw }, response => {\r\n                let params = {\r\n                name: `${firstName}`,\r\n                password: newPsw,\r\n              };\r\n              HTTP_REQUESTS.USER_SERVICE.UPDATE_ONE_TENANT_USER(context._id,params,response=>{\r\n                context.name=params.name;\r\n                //props.enqueueSnackbar(t('Profile.Profile Updated'), { variant: \"success\" });\r\n                alert(\"profile updated with new password\");\r\n\r\n                \r\n            },error=>{\r\n                /* props.enqueueSnackbar(t('errorProperties.PROFILE.ON_SAVE_CHANGES.IF_PASSWORD_EMPTY_ELSE'), { variant: \"error\" }); */\r\n                alert(\"error occured while trying the update\")\r\n            })\r\n            },\r\n            (fail) => {\r\n                setPswError('errorProperties.PROFILE.ON_SAVE_CHANGES.SET_PSW_ERROR')\r\n              /* props.enqueueSnackbar(t('errorProperties.PROFILE.ON_SAVE_CHANGES.SET_PSW_ERROR') ,{ variant: \"error\" }); */\r\n            }\r\n        );\r\n        \r\n      }\r\n   \r\n    \r\n  };\r\n\r\n\r\n  return (\r\n    \r\n    <div>\r\n      <Card>\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n          <CssBaseline />\r\n         \r\n          <div className={classes.paper}>\r\n            \r\n            <form className={classes.form} noValidate >\r\n              <Grid item xs={12}>\r\n                <AccountProfileCard\r\n                  image={image}\r\n                  setImage={setImage}\r\n                  avatar={avatar}\r\n                  setAvatar={setAvatar}\r\n                ></AccountProfileCard>\r\n              </Grid>\r\n              <br></br>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={12}>\r\n                  <TextField\r\n                    inputProps={{ autoComplete:'off',form: {autoComplete: 'off'}}}\r\n                    name=\"firstName\"\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    value={firstName}\r\n                    helperText={t(firstNameError)}\r\n                    error={t(firstNameError)}\r\n                    onChange={firstNameChanged}\r\n                    id=\"firstName\"\r\n                    label={t('Profile.Nickname')}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    type=\"text\"\r\n                    id=\"email\"\r\n                    onChange={emailChanged}\r\n                    error={t(emailError)}\r\n                    helperText={t(emailError)}\r\n                    value={email}\r\n                    disabled={true}\r\n                    label={t('Profile.Email')}\r\n                    name=\"email\"\r\n                    \r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label={t('Profile.Password')}\r\n                    onChange={passwordChanged}\r\n                    error={t(pswError)}\r\n                    helperText={t(pswError)||t('errorProperties.PROFILE.RETURN.GRID')}\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    \r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <TextField\r\n                    variant=\"outlined\"\r\n                    fullWidth\r\n                    name=\"newPassword\"\r\n                    onChange={newPasswordChanged}\r\n                    error={t(newPswError)}\r\n                    helperText={t(newPswError)}\r\n                    label={t('Profile.New Password')}\r\n                    type=\"password\"\r\n                    id=\"newPassword\"\r\n                    autoComplete='nope'\r\n                  />\r\n                </Grid>\r\n             \r\n              <Grid item xs={12} sm={6}>\r\n                <Button\r\n                  style={theme.palette.danger}\r\n                  type=\"button\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  onClick= {() => {window.location.reload(false);}}\r\n                >\r\n                  {t('Profile.Cancel')}\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Button\r\n                  type=\"button\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  \r\n                  onClick={saveClicked}\r\n                >\r\n                  {t('Profile.Save')}\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={0} sm={3}>\r\n                \r\n              </Grid>\r\n              <Grid item xs={12} sm={6}>\r\n                <Button\r\n                  type=\"button\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"inherit\"\r\n                  \r\n                  onClick={deleteClicked}\r\n                >\r\n                  {t('Profile.Delete')}\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={0} sm={3} >\r\n                \r\n              </Grid>\r\n              <Grid item xs={12} >\r\n                \r\n              </Grid>\r\n              <Grid item xs={12} >\r\n                \r\n              </Grid>\r\n              <Grid item xs={12} >\r\n                \r\n              </Grid>\r\n              <DeleteConfirmDialog  open = {openLogout} onClose={handleCloseLogout}/>\r\n            </Grid>\r\n            </form>  \r\n          </div>\r\n        </Container>    \r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n}));\r\n\r\nexport default function Game(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={5} justify=\"center\" alignItems=\"center\">\r\n                <div >\r\n                    \r\n                </div>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n\r\n    main : {\r\n/*         backgroundImage: 'url(images/question-mark.jpg)',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center', */\r\n        paddingTop:\"10px\",\r\n        paddingBottom: \"180px\"\r\n    },\r\n    img : {\r\n        flex: 1,\r\n        width: 180,\r\n        height: 270,\r\n        resizeMode: 'contain',\r\n    }\r\n\r\n}));\r\n\r\nconst BlueTextTypography = withStyles({\r\n    root: {\r\n      color: \"#2c3e50\",\r\n    }\r\n  })(Typography);\r\n\r\n  const WhiteTextTypography = withStyles({\r\n    root: {\r\n      color: \"#ecf0f1\"\r\n    }\r\n  })(Typography);\r\n\r\nexport default function Game(props) {\r\n    \r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n\r\n    return (\r\n        <div>\r\n            <Grid container spacing={5} justify=\"center\" alignItems=\"center\" className={classes.main}>\r\n                <Grid item xs='10'>\r\n                    <BlueTextTypography variant=\"h1\">\r\n                        {t(\"HowTo.How\")}\r\n                    </BlueTextTypography>\r\n                </Grid>\r\n                <Grid item xs='2'>\r\n                    <img src=\"/images/Hacettepe.jpg\" alt=\"image1\" className={classes.img}/>;\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <BlueTextTypography  variant=\"h2\" paddingLeft=\"100px\">\r\n                        {t(\"HowTo.Click\")}\r\n                    </BlueTextTypography>\r\n                </Grid>\r\n{/*                 <Grid item xs={12} >\r\n                    <BlueTextTypography  variant=\"h2\" paddingLeft=\"100px\">\r\n                        {t(\"HowTo.Then\")}\r\n                    </BlueTextTypography>\r\n                </Grid> */}\r\n                <Grid item xs={12} >\r\n                    <BlueTextTypography  variant=\"h2\" paddingLeft=\"100px\">\r\n                        {t(\"HowTo.Choose\")}\r\n                    </BlueTextTypography>\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <BlueTextTypography  variant=\"h2\" paddingLeft=\"100px\">\r\n                        {t(\"HowTo.By\")}\r\n                    </BlueTextTypography>\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <BlueTextTypography  variant=\"h2\" paddingLeft=\"100px\">\r\n                        {t(\"HowTo.Avoid\")}\r\n                    </BlueTextTypography>\r\n                </Grid>\r\n\r\n                <Grid style={{\r\n                    position: \"fixed\",\r\n                    left: 0,\r\n                    bottom: 0,\r\n                    right: 0,\r\n                    backgroundColor: \"#2c3e50\",\r\n                    justifyContent:\"center\",\r\n                    }}>\r\n                        <WhiteTextTypography variant=\"h5\">\r\n                            © Copyright - Hacettepe CS Project\r\n                        </WhiteTextTypography>\r\n                    </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","import React, { Component } from \"react\";\nimport history from './history';\nimport { Route, Router, Switch } from \"react-router\";\nimport './App.scss';\n\nimport PasswordForgot from './components/Login/PasswordForgot';\nimport PasswordChange from './components/Login/PasswordChange';\nimport Login from './components/Login/Login';\nimport SignUp from './components/Login/SignUp';\nimport Main from './components/Main/Main';\nimport Main2 from './components/Main/Main2.js';\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport LeftDrawer from './components/Menu/LeftDrawer';\nimport Profile from './components/Menu/Profile';\nimport Game from './components/Menu/Game';\nimport HowToPlay from './components/Menu/HowToPlay';\n\nimport { HTTP_REQUESTS } from \"./backend_int/services/HttpRquestService\";\nimport SessionStorage from './components/Helper-Functions/SessionStorage';\nimport LeftDrawer2 from \"./components/Menu/LeftDrawer2\";\n\n\n\nclass App extends Component {\n\n  //states are here\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      isAuthenticated: false,\n      sessionData: null\n    };\n  }\n\n  componentDidMount() {\n    HTTP_REQUESTS.USER_SERVICE.AUTH_CALL(\n      data => {\n          let that = this;\n          setTimeout(function(){ \n            that.setState({sessionData: data, isAuthenticated: true, isLoading: false});\n           }, 3000);\n          //SessionStorage.sessionData = data;\n          SessionStorage.welcomeMessageRequest = true;\n\n      },\n      err => {\n        this.setState({isLoading: false});\n      }\n    );\n  \n  }\n\n  callMe = async () => {\n    await HTTP_REQUESTS.USER_SERVICE.AUTH_CALL(\n      data => {\n\n          this.setState({sessionData: data});\n          SessionStorage.welcomeMessageRequest = true;\n      },\n      err => {\n        this.setState({isLoading: false});\n      }\n    )\n  }\n\n\n\n\n  render() {\n    return (\n      <Router history={history}>\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/password-forgot\">\n            {<PasswordForgot />}\n          </Route>\n          <Route path=\"/password-change\">\n            {<PasswordChange />}\n          </Route>\n          <Route path=\"/login\">\n            {<Login />}\n          </Route>\n          <Route path=\"/sign-up\">\n            {<SignUp />}\n          </Route>\n          <Route path=\"/basic-main\">\n            {<Main2 />}\n          </Route>\n          <Route path=\"/basic-how-to-play\">\n            {this.withMenu2(<HowToPlay />)}\n          </Route>\n\n          <PrivateRoute path={\"/main\"} contextData = {this.state.sessionData} component={this.withMenu(<Main />)} isAuthenticated={this.state.isAuthenticated} isLoading={this.state.isLoading}/>\n          <PrivateRoute path={\"/profile\"} contextData = {this.state.sessionData} component={this.withMenu(<Profile switchMain={this.switchMain}/>)} isAuthenticated={this.state.isAuthenticated} isLoading={this.state.isLoading}/>\n          <PrivateRoute path={\"/game\"} contextData = {this.state.sessionData} component={this.withMenu(<Game />)} isAuthenticated={this.state.isAuthenticated} isLoading={this.state.isLoading}/>\n          <PrivateRoute path={\"/how-to-play\"} contextData = {this.state.sessionData} component={this.withMenu(<HowToPlay />)} isAuthenticated={this.state.isAuthenticated} isLoading={this.state.isLoading}/>\n          <PrivateRoute exact path={\"/\"} contextData = {this.state.sessionData} component={this.withMenu(<Main onCreateWorkspace={this.callMe} />)} isAuthenticated={this.state.isAuthenticated} isLoading={this.state.isLoading}/>\n        </Switch>\n      </div>\n      </Router>\n    );\n  }\n\n  withMenu = (component) => {\n\n    return <LeftDrawer innerComponent={component}></LeftDrawer>\n\n}\n  withMenu2 = (component) => {\n\n    return <LeftDrawer2 innerComponent={component}></LeftDrawer2>\n\n}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n\r\ni18n\r\n  .use(Backend)\r\n  .use(LanguageDetector)\r\n  .use(initReactI18next)\r\n\r\n  .init({\r\n    lng: 'en',\r\n    debug: true,\r\n    react: { \r\n      useSuspense: false\r\n    },\r\n\r\n    interpolation: {\r\n      escapeValue: false,\r\n    }\r\n  });\r\n\r\n\r\nexport default i18n;","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import {BrowserRouter} from 'react-router-dom';\nimport './i18n';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback=\"loading\"> \n        <App />\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}